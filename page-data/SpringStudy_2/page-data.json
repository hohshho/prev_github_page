{"componentChunkName":"component---src-templates-post-tsx","path":"/SpringStudy_2/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"spring\" style=\"position:relative;\"><a href=\"#spring\" aria-label=\"spring permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Spring</h1>\n<blockquote>\n<p>스프링의 가장 큰 핵심은 <strong>좋은 객체지향 어플리케이션 개발</strong>에 도움</p>\n</blockquote>\n<h2 id=\"1-객체-지향-설계\" style=\"position:relative;\"><a href=\"#1-%EA%B0%9D%EC%B2%B4-%EC%A7%80%ED%96%A5-%EC%84%A4%EA%B3%84\" aria-label=\"1 객체 지향 설계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 객체 지향 설계</h2>\n<h3 id=\"역할인터페이스과-책임구현체-분리\" style=\"position:relative;\"><a href=\"#%EC%97%AD%ED%95%A0%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B3%BC-%EC%B1%85%EC%9E%84%EA%B5%AC%ED%98%84%EC%B2%B4-%EB%B6%84%EB%A6%AC\" aria-label=\"역할인터페이스과 책임구현체 분리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>역할(인터페이스)과 책임(구현체) 분리</h3>\n<ul>\n<li>구현체를 <strong>실행 시점에 유연하게 변경가능</strong><br>\n=> 클라이언트 변경 없이 서버 구현기능 변경  </li>\n<li>의존관계 주입(DI), 제어의 역전(IoC)</li>\n</ul>\n<h3 id=\"좋은-객체지향-설계의-5가지-원칙\" style=\"position:relative;\"><a href=\"#%EC%A2%8B%EC%9D%80-%EA%B0%9D%EC%B2%B4%EC%A7%80%ED%96%A5-%EC%84%A4%EA%B3%84%EC%9D%98-5%EA%B0%80%EC%A7%80-%EC%9B%90%EC%B9%99\" aria-label=\"좋은 객체지향 설계의 5가지 원칙 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>좋은 객체지향 설계의 5가지 원칙</h3>\n<p>SRP: 단일 책임 원칙(single responsibility principle)  </p>\n<ul>\n<li>한 클래스는 하나의 책임</li>\n<li><strong>중요한 기준</strong>은 변경 / 변경이 있을 때 파급효과가 적어야 함</li>\n</ul>\n<p>OCP: 개방-폐쇄 원칙 (Open/closed principle)</p>\n<ul>\n<li>역할과 책임 분리  </li>\n<li>인터페이스를 구현한 클래스(구현체)로 기능 구현  </li>\n<li>객체 생성, 연관관계 생성, 설정자가 필요  </li>\n</ul>\n<p>LSP: 리스코프 치환 원칙 (Liskov substitution principle)  </p>\n<ul>\n<li>컴파일에 성공하는 것을 넘어서 기능까지 만족해야 한다.  </li>\n</ul>\n<p>ISP: 인터페이스 분리 원칙 (Interface segregation principle)  </p>\n<ul>\n<li>특정 클라이언트를 위한 여러개의 인터페이스가 범용 인터페이스 보다 낫다</li>\n</ul>\n<p>DIP: 의존관계 역전 원칙 (Dependency inversion principle)  </p>\n<ul>\n<li>추상화에 의존해야하고 구체화에는 의존하면 안된다</li>\n<li>(Interface 에만 의존해야 한다.)</li>\n<li>협력 관계   </li>\n<li>클래스 다이어그램</li>\n<li>객체 다이어그램</li>\n</ul>\n<h2 id=\"관심사-분리\" style=\"position:relative;\"><a href=\"#%EA%B4%80%EC%8B%AC%EC%82%AC-%EB%B6%84%EB%A6%AC\" aria-label=\"관심사 분리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>관심사 분리</h2>\n<p>구현 객체에서 직접 추상화된 객체 의존을 선택하게 되면 DIP에 위반된다.<br>\n-> <strong>구현 객체와 추상화된 객체를 연결하는 설정 클래스</strong>로 관리한다. -> AppConfig<br>\n=> 이렇게 하면 <strong>구성 영역</strong>과 <strong>사용 영역</strong>으로 분리하는 효과를 가진다.</p>\n<h2 id=\"2-ioc-di-container\" style=\"position:relative;\"><a href=\"#2-ioc-di-container\" aria-label=\"2 ioc di container permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. IoC, DI, Container</h2>\n<h3 id=\"제어의-역전-ioc\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%EC%96%B4%EC%9D%98-%EC%97%AD%EC%A0%84-ioc\" aria-label=\"제어의 역전 ioc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제어의 역전 (IoC)</h3>\n<blockquote>\n<p>프로그램이 <strong>객체의 생성</strong>관리 </p>\n</blockquote>\n<h3 id=\"di\" style=\"position:relative;\"><a href=\"#di\" aria-label=\"di permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DI</h3>\n<blockquote>\n<p>실행 시점(런타임)에 외부에서 구현 객체를 생성해 의존관계 설정<br>\n-> <strong>동적으로 객체 의존관계 변경 가능</strong>   </p>\n</blockquote>\n<h3 id=\"프레임워크-vs-라이브러리\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC-vs-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC\" aria-label=\"프레임워크 vs 라이브러리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프레임워크 vs 라이브러리</h3>\n<ul>\n<li>프레임워크 : 프로그램이 코드 제어 및 실행</li>\n<li>라이브러리 : 내가 작성한 코드가 제어의 흐름 담당</li>\n</ul>\n<h3 id=\"di-container\" style=\"position:relative;\"><a href=\"#di-container\" aria-label=\"di container permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DI Container</h3>\n<blockquote>\n<p>객체 생성, 관리, 의존관계 연결</p>\n</blockquote>\n<h2 id=\"3-container-bean\" style=\"position:relative;\"><a href=\"#3-container-bean\" aria-label=\"3 container bean permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Container, Bean</h2>\n<h3 id=\"applicationcontext-스프링-컨테이너interface\" style=\"position:relative;\"><a href=\"#applicationcontext-%EC%8A%A4%ED%94%84%EB%A7%81-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88interface\" aria-label=\"applicationcontext 스프링 컨테이너interface permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>ApplicationContext</strong> 스프링 컨테이너(Interface)</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">AnnotationConfigApplicationContext</span> ac <span class=\"token operator\">=</span> \n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnnotationConfigApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AppConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 매개변수로 구성 정보 지정</span></code></pre></div>\n<ul>\n<li>\n<ol>\n<li>XMl, 2) Annotation 기반으로 스프링 컨테이너 생성 가능</li>\n</ol>\n</li>\n<li>스프링 컨테이너를 생성할 땐 <strong>구성 정보</strong>를 지정해줘야 한다</li>\n<li>Bean은 key-value형태로 저장이되고, <strong>항상 다른 이름을 사용</strong>해야 한다.</li>\n<li>MessageSource(국제화), EnviromentCapable(로컬, 개발, 운영 구분)</li>\n<li>ApplicationEventPublisher(이벤트 발행, 구독 모델 지원), ResourceLoader(파일, 클래스패스 리소스 조회)</li>\n</ul>\n<h3 id=\"bean-조회\" style=\"position:relative;\"><a href=\"#bean-%EC%A1%B0%ED%9A%8C\" aria-label=\"bean 조회 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>bean 조회</strong></h3>\n<blockquote>\n<p>빈을 조회할 때 부모타입으로 조회하면, <strong>자식 타입도 함께 조회</strong></p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">ac<span class=\"token punctuation\">.</span><span class=\"token function\">getBeanDefinitionNames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> 모든 빈 조회\nac<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> 빈 이름으로 빈 객체 조회\n\n<span class=\"token comment\">// getRole() bean 구분 </span>\n<span class=\"token comment\">// ROLE_APPLICATION : 사용자 정의 빈</span>\n<span class=\"token comment\">// ROLE_INFRASTRUCTURE : 스프링 내부 빈</span></code></pre></div>\n<h3 id=\"bean-계층-구조\" style=\"position:relative;\"><a href=\"#bean-%EA%B3%84%EC%B8%B5-%EA%B5%AC%EC%A1%B0\" aria-label=\"bean 계층 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bean 계층 구조</h3>\n<div class=\"gatsby-highlight\" data-language=\"markdown\"><pre class=\"language-markdown\"><code class=\"language-markdown\">BeanFactory<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Interface</span><span class=\"token punctuation\">></span></span> &lt;- ApplicationContext &lt;- AnnotationConfig / ApplicationContext</code></pre></div>\n<p><strong>BeanFactory</strong>  </p>\n<ul>\n<li>스프링 컨테이너 최상위 인터페이스 </li>\n<li>빈 관리, 조회하는 역할</li>\n<li>getBean제공</li>\n</ul>\n<h2 id=\"스프링-빈-설정-메타-정보---beandefinition\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B9%88-%EC%84%A4%EC%A0%95-%EB%A9%94%ED%83%80-%EC%A0%95%EB%B3%B4---beandefinition\" aria-label=\"스프링 빈 설정 메타 정보   beandefinition permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스프링 빈 설정 메타 정보 - BeanDefinition</h2>\n<blockquote>\n<p>역할 / 구현 개념 분리 => <strong>스프링 컨테이너는 이 메타 정보를 기반으로 빈 생성</strong></p>\n</blockquote>\n<details>\n<summary><b>BeanDefinition 정보 (Toggle)</b></summary>\n<div markdown=\"1\">       \nBeanClassName: 생성할 빈의 클래스 명(자바 설정 처럼 팩토리 역할의 빈을 사용하면 없음)</br>\nfactoryBeanName: 팩토리 역할의 빈을 사용할 경우 이름, 예) appConfig </br> \nfactoryMethodName: 빈을 생성할 팩토리 메서드 지정, 예) memberService  </br>\nScope: 싱글톤(기본값)  </br>\nlazyInit: 스프링 컨테이너를 생성할 때 빈을 생성하는 것이 아니라, 실제 빈을 사용할 때 까지 최대한 생성을 지연처리 하는지 여부  </br>\nInitMethodName: 빈을 생성하고, 의존관계를 적용한 뒤에 호출되는 초기화 메서드 명  </br>\nDestroyMethodName: 빈의 생명주기가 끝나서 제거하기 직전에 호출되는 메서드 명 Constructor arguments, Properties: 의존관계 주입에서 사용한다.  </br>\n - (자바 설정 처럼 팩토리 역할의 빈을 사용하면 없음)  </br>\n</div>\n</details>\n<p>스프링이 <strong>다양한 형태의 설정 정보를 추상화해서 사용</strong></p>\n<h2 id=\"4-singleton-container\" style=\"position:relative;\"><a href=\"#4-singleton-container\" aria-label=\"4 singleton container permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Singleton Container</h2>\n<blockquote>\n<p>클래스 객체가 1개만 생기는 디자인 패턴 </p>\n</blockquote>\n<p> -> <strong>private 생성자를 사용해 임의로 new키워드 사용 방지</strong> </p>\n<p>대부분 싱클톤패턴을 시용한다.<br>\n(HTTP Request LifeCycle, HTTP Session LifeCycle에 Bean LifeCycle 맞추는 경우같이 아주 특별한 경우에만 싱글톤을 사용하지 않음)</p>\n<p>싱글톤 객체를 <strong>생성, 관리</strong>하는 기능을 <strong>싱글톤 레지스트리</strong>라 한다</p>\n<h3 id=\"singleton-방식-주의점\" style=\"position:relative;\"><a href=\"#singleton-%EB%B0%A9%EC%8B%9D-%EC%A3%BC%EC%9D%98%EC%A0%90\" aria-label=\"singleton 방식 주의점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Singleton 방식 주의점!!</h3>\n<blockquote>\n<p>여러 클라이언트가 같은 객체를 공유하기 때문에 <strong>상태를 유지하게</strong> 설계하면 안된다.</p>\n</blockquote>\n<ul>\n<li>특정 클라이언트에 <strong>의존적인 필드</strong>가 있으면 안된다.</li>\n<li>값을 <strong>변경할 수 있는 필드</strong>가 있으면 안된다.</li>\n<li>가급적 <strong>읽기만 가능하게</strong></li>\n<li>필드 대신에 자바에서 <strong>공유할 수 없는 지역변수, 파라미터, ThreadLocal</strong> 등을 사용</li>\n<li>스프링 빈 항상 <strong>무상태(stateless)</strong>로 설계</li>\n</ul>\n<h3 id=\"configuration-어노테이션\" style=\"position:relative;\"><a href=\"#configuration-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98\" aria-label=\"configuration 어노테이션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration 어노테이션</h3>\n<blockquote>\n<p>Configuration 어노테이션은 빈의 <strong>싱글톤을 보장</strong>해준다.\n(Bean만 사용해도 등록은 되지만, 싱글톤x)</p>\n</blockquote>\n<h2 id=\"5-component-scan\" style=\"position:relative;\"><a href=\"#5-component-scan\" aria-label=\"5 component scan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. Component Scan</h2>\n<blockquote>\n<p>설정 정보가 없어도 자동으로 Bean 등록 -> <strong>Autowired</strong> 어노테이션으로 의존성 주입</p>\n</blockquote>\n<p>Component Scan은 @Component가 붙은 모든 클래스를 빈으로 등록</p>\n<ul>\n<li>기본 전략 : 기본이름은 클래스 명을 사용하되 <strong>맨 앞글자만 소문자로 사용</strong><br>\nex) UserImpl 클래스 -> userImpl  </li>\n<li>직접 지정 : 지정하고 싶은 이름을 @Component 매개변수에 등록</li>\n</ul>\n<h3 id=\"componentscan-옵션\" style=\"position:relative;\"><a href=\"#componentscan-%EC%98%B5%EC%85%98\" aria-label=\"componentscan 옵션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ComponentScan 옵션</h3>\n<ul>\n<li>basePackages : 패키지로 시작위치 지정</li>\n<li>basePackageClasses : 클래스 위치로 지정</li>\n<li>includeFilters : 추가 지정</li>\n<li>excludeFilters : 제외할 대상 지정</li>\n</ul>\n<h3 id=\"부가기능이-있는-어노테이션\" style=\"position:relative;\"><a href=\"#%EB%B6%80%EA%B0%80%EA%B8%B0%EB%8A%A5%EC%9D%B4-%EC%9E%88%EB%8A%94-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98\" aria-label=\"부가기능이 있는 어노테이션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>부가기능이 있는 어노테이션</h3>\n<p>@Controller : 스프링 MVC 컨트롤러<br>\n@Repository : 데이터 접근 계층 인식 - 데이터 계층 예외 -> 스프링 예외로 변환<br>\n@Configuration : 스프링 설정 정보 인식 / 싱글톤 유지<br>\n@Service : 특별한 처리 x - 개발자들이 비즈니스 로직 구분하기 위한 용도  </p>\n<details>\n<summary><b>FilterType 정보 (Toggle)</b></summary>\n<div markdown=\"1\">       \nANNOTATION: 기본값, 애노테이션 인식 ex) org.example.SomeAnnotation</br>\nASSIGNABLE_TYPE: 지정한 타입과 자식 타입 인식 ex) org.example.SomeClass</br>\nASPECTJ: AspectJ 패턴 사용 </br>\nex) org.example..*Service+ </br>\nREGEX: 정규 표현식 </br>\nex) org\\.example\\.Default.* </br>\nCUSTOM: TypeFilter 이라는 인터페이스를 구현해서 처리 ex) org.example.MyTypeFilter </br>\n<div markdown=\"java\">\nincludeFilters = @Filter(type = FilterType.ANNOTATION, classes = MyIncludeComponent.class)\n</div>\n</div>\n</details>\n<h2 id=\"6-의존-관계\" style=\"position:relative;\"><a href=\"#6-%EC%9D%98%EC%A1%B4-%EA%B4%80%EA%B3%84\" aria-label=\"6 의존 관계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. 의존 관계</h2>\n<h2 id=\"7-bean-lifecycle-callback\" style=\"position:relative;\"><a href=\"#7-bean-lifecycle-callback\" aria-label=\"7 bean lifecycle callback permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. Bean LifeCycle Callback</h2>\n<h2 id=\"8-bean-scope\" style=\"position:relative;\"><a href=\"#8-bean-scope\" aria-label=\"8 bean scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8. Bean scope</h2>\n<h1 id=\"test-tip\" style=\"position:relative;\"><a href=\"#test-tip\" aria-label=\"test tip permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test Tip!!</h1>\n<ul>\n<li>Assertions 객체는 상단에 선언하고 사용하는게 좋다.</li>\n</ul>","excerpt":"Spring 스프링의 가장 큰 핵심은 좋은 객체지향 어플리케이션 개발에 도움 1. 객체 지향 설계 역할(인터페이스)과 책임(구현체) 분리 구현체를 실행 시점에 유연하게 변경가능 => 클라이언트 변경 없이 서버 구현기능 변경   의존관계 주입(DI),…","tableOfContents":"<ul>\n<li>\n<p><a href=\"/SpringStudy_2/#spring\">Spring</a></p>\n<ul>\n<li>\n<p><a href=\"/SpringStudy_2/#1-%EA%B0%9D%EC%B2%B4-%EC%A7%80%ED%96%A5-%EC%84%A4%EA%B3%84\">1. 객체 지향 설계</a></p>\n<ul>\n<li><a href=\"/SpringStudy_2/#%EC%97%AD%ED%95%A0%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B3%BC-%EC%B1%85%EC%9E%84%EA%B5%AC%ED%98%84%EC%B2%B4-%EB%B6%84%EB%A6%AC\">역할(인터페이스)과 책임(구현체) 분리</a></li>\n<li><a href=\"/SpringStudy_2/#%EC%A2%8B%EC%9D%80-%EA%B0%9D%EC%B2%B4%EC%A7%80%ED%96%A5-%EC%84%A4%EA%B3%84%EC%9D%98-5%EA%B0%80%EC%A7%80-%EC%9B%90%EC%B9%99\">좋은 객체지향 설계의 5가지 원칙</a></li>\n</ul>\n</li>\n<li><a href=\"/SpringStudy_2/#%EA%B4%80%EC%8B%AC%EC%82%AC-%EB%B6%84%EB%A6%AC\">관심사 분리</a></li>\n<li>\n<p><a href=\"/SpringStudy_2/#2-ioc-di-container\">2. IoC, DI, Container</a></p>\n<ul>\n<li><a href=\"/SpringStudy_2/#%EC%A0%9C%EC%96%B4%EC%9D%98-%EC%97%AD%EC%A0%84-ioc\">제어의 역전 (IoC)</a></li>\n<li><a href=\"/SpringStudy_2/#di\">DI</a></li>\n<li><a href=\"/SpringStudy_2/#%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC-vs-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC\">프레임워크 vs 라이브러리</a></li>\n<li><a href=\"/SpringStudy_2/#di-container\">DI Container</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/SpringStudy_2/#3-container-bean\">3. Container, Bean</a></p>\n<ul>\n<li><a href=\"/SpringStudy_2/#applicationcontext-%EC%8A%A4%ED%94%84%EB%A7%81-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88interface\"><strong>ApplicationContext</strong> 스프링 컨테이너(Interface)</a></li>\n<li><a href=\"/SpringStudy_2/#bean-%EC%A1%B0%ED%9A%8C\"><strong>bean 조회</strong></a></li>\n<li><a href=\"/SpringStudy_2/#bean-%EA%B3%84%EC%B8%B5-%EA%B5%AC%EC%A1%B0\">Bean 계층 구조</a></li>\n</ul>\n</li>\n<li><a href=\"/SpringStudy_2/#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B9%88-%EC%84%A4%EC%A0%95-%EB%A9%94%ED%83%80-%EC%A0%95%EB%B3%B4---beandefinition\">스프링 빈 설정 메타 정보 - BeanDefinition</a></li>\n<li>\n<p><a href=\"/SpringStudy_2/#4-singleton-container\">4. Singleton Container</a></p>\n<ul>\n<li><a href=\"/SpringStudy_2/#singleton-%EB%B0%A9%EC%8B%9D-%EC%A3%BC%EC%9D%98%EC%A0%90\">Singleton 방식 주의점!!</a></li>\n<li><a href=\"/SpringStudy_2/#configuration-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98\">Configuration 어노테이션</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/SpringStudy_2/#5-component-scan\">5. Component Scan</a></p>\n<ul>\n<li><a href=\"/SpringStudy_2/#componentscan-%EC%98%B5%EC%85%98\">ComponentScan 옵션</a></li>\n<li><a href=\"/SpringStudy_2/#%EB%B6%80%EA%B0%80%EA%B8%B0%EB%8A%A5%EC%9D%B4-%EC%9E%88%EB%8A%94-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98\">부가기능이 있는 어노테이션</a></li>\n</ul>\n</li>\n<li><a href=\"/SpringStudy_2/#6-%EC%9D%98%EC%A1%B4-%EA%B4%80%EA%B3%84\">6. 의존 관계</a></li>\n<li><a href=\"/SpringStudy_2/#7-bean-lifecycle-callback\">7. Bean LifeCycle Callback</a></li>\n<li><a href=\"/SpringStudy_2/#8-bean-scope\">8. Bean scope</a></li>\n</ul>\n</li>\n<li><a href=\"/SpringStudy_2/#test-tip\">Test Tip!!</a></li>\n</ul>","fields":{"slug":"/SpringStudy_2/"},"frontmatter":{"title":"스프링 핵심 원리 강의 정리 - 김영한","date":"Feb 28, 2022","tags":["Spring"],"keywords":["Spring"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/SpringStudy_2/","series":[{"slug":"/SpringStudy_1/","title":"스프링 입문 강의 정리 - 김영한","num":1},{"slug":"/SpringStudy_2/","title":"스프링 핵심 원리 강의 정리 - 김영한","num":2}],"lastmod":"2022-02-28"}},"staticQueryHashes":["2027115977","694178885"]}