{"componentChunkName":"component---src-templates-post-tsx","path":"/JPA_2/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"테이블-엔티티-설계-시-주의사항\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%97%94%ED%8B%B0%ED%8B%B0-%EC%84%A4%EA%B3%84-%EC%8B%9C-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD\" aria-label=\"테이블 엔티티 설계 시 주의사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테이블, 엔티티 설계 시 주의사항</h1>\n<ul>\n<li>다대다 관계 사용x -> 일대다, 다대일로 풀어서 사용</li>\n<li>외래키가 있는 곳을 연관관계의 주인으로 설정</li>\n<li>getter는 가급적 열어두고 setter는 비즈니스 메서드를 별도로 작성해 변경지점이 명확히 설계</li>\n<li>값 타입 사용시 <strong>Immutable</strong> 하게 설계</li>\n<li>연관관계는 지연로딩 설정</li>\n</ul>\n<h1 id=\"계층형-구조\" style=\"position:relative;\"><a href=\"#%EA%B3%84%EC%B8%B5%ED%98%95-%EA%B5%AC%EC%A1%B0\" aria-label=\"계층형 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>계층형 구조</h1>\n<ul>\n<li>Controller : 웹 계층</li>\n<li>Service : 비즈니스 로직, 트랜잭션 처리</li>\n<li>Repository : JPA 사용 계층</li>\n<li>Domain : 엔티티가 모여있는 계층</li>\n</ul>\n<p>서비스, 리포지토리 계층 개발 -> 테스트 케이스 작성 후 검증 -> 웹 계층 적용</p>\n<h1 id=\"어노테이션\" style=\"position:relative;\"><a href=\"#%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98\" aria-label=\"어노테이션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>어노테이션</h1>\n<p>Repository 관련</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Repository</span> <span class=\"token comment\">// 빈으로 등록, JPA 예외를 스프링 기반 예외로 변환</span>\n<span class=\"token annotation punctuation\">@PersistenceUnit</span> <span class=\"token comment\">// 엔티티 매니저 팩토리(EntityManagerFactory) 주입</span>\n<span class=\"token annotation punctuation\">@PersistenceContext</span> <span class=\"token comment\">// 엔티티 매니저(EntityManager) 주입</span>\n<span class=\"token comment\">// -> SpringBoot 사용 시 @Autowird지원</span>\n<span class=\"token comment\">// -> @RequiredArgsConstruct 사용해 생성자 주입 가능</span></code></pre></div>\n<p>Service 관련</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Service</span>\n\n<span class=\"token comment\">// 트랜잭션, 영속성 컨텍스트</span>\n<span class=\"token comment\">// 데이터의 변경이 없는 읽기 전용 메서드에 사용</span>\n<span class=\"token comment\">// 영속성 컨텍스트를 플러시 않아 약간의 성능 향상(읽기 전용에는 다 적용)</span>\n<span class=\"token annotation punctuation\">@Transactional</span><span class=\"token punctuation\">(</span>readOnly<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Test 관련</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@RunWith</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringRunner</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Junit4 스프링과 테스트 통합</span>\n<span class=\"token annotation punctuation\">@ExtendWith</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringExtension</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Junit5</span>\n\n<span class=\"token annotation punctuation\">@SpringBootTest</span> <span class=\"token comment\">// 스프링 부트 띄우고 테스트 - @Autowired시 필요</span>\n<span class=\"token annotation punctuation\">@Transactional</span> <span class=\"token comment\">// 테스트를 실행할 때마다 트랜잭션 시작 - 테스트 종료 시 롤백</span></code></pre></div>\n<h1 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h1>\n<ul>\n<li><a href=\"https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81%EB%B6%80%ED%8A%B8-JPA-%ED%99%9C%EC%9A%A9-1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">실전! 스프링 부트와 JPA 활용1 - 김영한</a></li>\n<li><a href=\"https://handr95.tistory.com/16\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">[JUnit] 경고: Runner org.junit.internal.runners.ErrorReportingRunner</a></li>\n</ul>","excerpt":"테이블, 엔티티 설계 시 주의사항 다대다 관계 사용x -> 일대다, 다대일로 풀어서 사용 외래키가 있는 곳을 연관관계의 주인으로 설정 getter는 가급적 열어두고 setter는 비즈니스 메서드를 별도로 작성해 변경지점이 명확히 설계 값 타입 사용시…","tableOfContents":"<ul>\n<li><a href=\"/JPA_2/#%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%97%94%ED%8B%B0%ED%8B%B0-%EC%84%A4%EA%B3%84-%EC%8B%9C-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD\">테이블, 엔티티 설계 시 주의사항</a></li>\n<li><a href=\"/JPA_2/#%EA%B3%84%EC%B8%B5%ED%98%95-%EA%B5%AC%EC%A1%B0\">계층형 구조</a></li>\n<li><a href=\"/JPA_2/#%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98\">어노테이션</a></li>\n<li><a href=\"/JPA_2/#reference\">Reference</a></li>\n</ul>","fields":{"slug":"/JPA_2/"},"frontmatter":{"title":"실전! 스프링 부트와 JPA 활용1 - 웹 애플리케이션 개발","date":"Sep 26, 2022","tags":["JPA"],"keywords":["JPA"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/JPA_2/","series":[{"slug":"/JPA_1/","title":"자바 ORM 표준 JPA 프로그래밍 (기본편) - 김영한","num":1},{"slug":"/JPA_2/","title":"실전! 스프링 부트와 JPA 활용1 - 웹 애플리케이션 개발","num":2},{"slug":"/JPA_3/","title":"실전! 스프링 부트와 JPA 활용2 - API 개발과 성능 최적화","num":3}],"lastmod":"2022-09-26"}},"staticQueryHashes":["2027115977","694178885"]}