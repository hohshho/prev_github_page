{"componentChunkName":"component---src-templates-post-tsx","path":"/permutation_2/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"ing\" style=\"position:relative;\"><a href=\"#ing\" aria-label=\"ing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ing</h1>\n<p>음... 어제 코딩테스트를 봤는데 조합 문제를 못풀었다... 하...ㅜ</p>\n<p>순열만 정리해서 조합, 중복 순열, 중복 조합 추가한다.</p>\n<p>다음엔 맞아야 하니 잘 정리해두자</p>\n<p>정리하고 백트래킹 문제 좀 풀어봐야 겠따 ㅜㅜ</p>\n<table>\n<thead>\n<tr>\n<th>종류</th>\n<th>정의</th>\n<th>중복</th>\n<th>순서</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>순열</td>\n<td>n개의 원소 중 r개를 순서를 고려 해 나열</td>\n<td>X</td>\n<td>O</td>\n</tr>\n<tr>\n<td>중복 순열</td>\n<td>n개의 원소 중 r개를 중복을 허용하고, 순서 고려해 나열</td>\n<td>O</td>\n<td>O</td>\n</tr>\n<tr>\n<td>조합</td>\n<td>n개의 원소 중 r개를 순서 생각하지 않고 나열</td>\n<td>X</td>\n<td>X</td>\n</tr>\n<tr>\n<td>중복 조합</td>\n<td>n개의 원소 중 r개를 중복을 허용하고, 순서를 생각하지 않고</td>\n<td>O</td>\n<td>X</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"조합\" style=\"position:relative;\"><a href=\"#%EC%A1%B0%ED%95%A9\" aria-label=\"조합 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>조합</h1>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">    <span class=\"token comment\">// static int res[], arr[], n, r, totalCnt;</span>\n    <span class=\"token comment\">// combination(0, 0, new int[r]);</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">combination</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> idx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> cnt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> selected<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>cnt <span class=\"token operator\">==</span> r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            totalCnt<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> saveArr <span class=\"token operator\">=</span> selected<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 객체 복사 - 원본 배열과 별개의 주소값으로 새로운 객체 생성</span>\n            res<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>saveArr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> idx<span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            selected<span class=\"token punctuation\">[</span>cnt<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">combination</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> cnt <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> selected<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<p>코드를 간략히 설명하면</p>\n<p>입력받은 n, r, arr은 전역으로 사용</p>\n<p>idx는 선택할 인덱스, cnt는 개수, selected는 값을 저장 할 배열이다.</p>\n<p>선택이 완료되면 res에 새로운 객체를 생성에 저장해주게 구현했다.</p>","excerpt":"ing 음... 어제 코딩테스트를 봤는데 조합 문제를 못풀었다... 하...ㅜ 순열만 정리해서 조합, 중복 순열, 중복 조합 추가한다. 다음엔 맞아야 하니 잘 정리해두자 정리하고 백트래킹 문제 좀 풀어봐야 겠따 ㅜㅜ 종류 정의 중복 순서 순열 n개의…","tableOfContents":"<ul>\n<li><a href=\"/permutation_2/#ing\">ing</a></li>\n<li><a href=\"/permutation_2/#%EC%A1%B0%ED%95%A9\">조합</a></li>\n</ul>","fields":{"slug":"/permutation_2/"},"frontmatter":{"title":"순열, 조합, 중복 순열, 중복 조합, 부분 집합","date":"Oct 31, 2022","tags":["Algorithm"],"keywords":["순열","조합","중복 순열","중복 조합","부분집합"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/permutation_2/","series":[{"slug":"/permutation_2/","title":"순열, 조합, 중복 순열, 중복 조합, 부분 집합","num":2}],"lastmod":"2022-10-31"}},"staticQueryHashes":["2027115977","694178885"]}