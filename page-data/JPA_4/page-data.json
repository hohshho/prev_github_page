{"componentChunkName":"component---src-templates-post-tsx","path":"/JPA_4/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"공통-인터페이스-설정\" style=\"position:relative;\"><a href=\"#%EA%B3%B5%ED%86%B5-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4-%EC%84%A4%EC%A0%95\" aria-label=\"공통 인터페이스 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>공통 인터페이스 설정</h1>\n<p>@SpringBootApplication위치에 @EnableJpaRepositories설정<br>\n(스프링 부트 사용시 생략 가능)</p>\n<p>JpaRepository를 상속받아 인터페이스 JpaRepository내 구현된 메소드 사용 필요 시 확장<br>\n-> Generic - &#x3C;엔티티 타입, 식별자 타입></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">TeamRepository</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">JpaRepository</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Team</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"쿼리-메소드\" style=\"position:relative;\"><a href=\"#%EC%BF%BC%EB%A6%AC-%EB%A9%94%EC%86%8C%EB%93%9C\" aria-label=\"쿼리 메소드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>쿼리 메소드</h1>\n<h2 id=\"메소드-이름으로-쿼리-생성\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EC%86%8C%EB%93%9C-%EC%9D%B4%EB%A6%84%EC%9C%BC%EB%A1%9C-%EC%BF%BC%EB%A6%AC-%EC%83%9D%EC%84%B1\" aria-label=\"메소드 이름으로 쿼리 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메소드 이름으로 쿼리 생성</h2>\n<blockquote>\n<p>스프링 데이터 JPA는 메소드 이름을 분석해서 JPQL을 생성하고 실행</p>\n</blockquote>\n<p><a href=\"https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#jpa.query-methods.query-creation\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">메소드 이름 내에서 지원되는 키워드</a></p>\n<ul>\n<li>필드명이 바뀐 경우 메서드 이름도 함께 변경</li>\n<li>짧은 쿼리를 사용하는 경우 주로 사용</li>\n<li><strong>식별하기 위한 내용(설명) 추가 가능</strong> ex) findSliceMemberByAge</li>\n</ul>\n<h2 id=\"namedquery\" style=\"position:relative;\"><a href=\"#namedquery\" aria-label=\"namedquery permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NamedQuery</h2>\n<blockquote>\n<p>쿼리에 이름을 부여하고 호출하는 기능</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Entity</span>\n<span class=\"token annotation punctuation\">@NamedQuery</span><span class=\"token punctuation\">(</span>\n      name<span class=\"token operator\">=</span><span class=\"token string\">\"Member.findByUsername\"</span><span class=\"token punctuation\">,</span>\n      query<span class=\"token operator\">=</span><span class=\"token string\">\"select m from Member m where m.username = :username\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Member</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>엔티티에 @NamedQuery로 작성한 SQL 가져와 사용</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Query</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"Member.findByUsername\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Member</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findByUsername</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>스프링 데이터 JPA는 선언한 \"도메인 클래스 + .(점) + 메서드 이름\"으로 Named 쿼리를 찾아서 실행</li>\n<li>만약 실행할 Named 쿼리가 없으면 메서드 이름으로 쿼리 생성 전략 사용</li>\n</ul>\n<h2 id=\"query---리파지토리-메소드에-쿼리-정의-파라미터-바인딩\" style=\"position:relative;\"><a href=\"#query---%EB%A6%AC%ED%8C%8C%EC%A7%80%ED%86%A0%EB%A6%AC-%EB%A9%94%EC%86%8C%EB%93%9C%EC%97%90-%EC%BF%BC%EB%A6%AC-%EC%A0%95%EC%9D%98-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0-%EB%B0%94%EC%9D%B8%EB%94%A9\" aria-label=\"query   리파지토리 메소드에 쿼리 정의 파라미터 바인딩 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@Query - 리파지토리 메소드에 쿼리 정의 파라미터 바인딩</h2>\n<blockquote>\n<p>NamedQuery 보단 @Query 사용해 리파지토리 메소드에 쿼리 직접 정의</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Query</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"select m from Member m where m.username= :username and m.age = :age\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Member</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findUser</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> username<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// DTO로 직접 조회</span>\n<span class=\"token annotation punctuation\">@Query</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"select new study.datajpa.dto.MemberDto(m.id, m.username, t.name) \"</span> <span class=\"token operator\">+</span>\n  <span class=\"token string\">\"from Member m join m.team t\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MemberDto</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findMemberDto</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>JPA Named 쿼리처럼 <strong>애플리케이션 실행 시점에 문법 오류를 발견</strong> 가능</li>\n<li>DTO로 직접 조회 시 new 명령어 사용</li>\n<li>파라미터 바인딩, 컬렉션 파라미터 바인딩 가능</li>\n</ul>\n<h2 id=\"반환-타입\" style=\"position:relative;\"><a href=\"#%EB%B0%98%ED%99%98-%ED%83%80%EC%9E%85\" aria-label=\"반환 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>반환 타입</h2>\n<blockquote>\n<p>유연한 반환 타입 지원</p>\n</blockquote>\n<p><a href=\"https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#repository-query-return-types\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Spring Data JPA return type 문서</a></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">//컬렉션</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Member</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findByUsername</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//단건</span>\n<span class=\"token class-name\">Member</span> <span class=\"token function\">findByUsername</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//단건 Optional</span>\n<span class=\"token class-name\">Optional</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Member</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findByUsername</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>컬렉션</p>\n<ul>\n<li>결과 없음: 빈 컬렉션 반환</li>\n</ul>\n<p>단건 조회</p>\n<ul>\n<li>결과 없음: null 반환 -> 예외 발생 시 무시하고 null 반환</li>\n<li>결과가 2건 이상: javax.persistence.NonUniqueResultException 예외 발생</li>\n</ul>\n<h2 id=\"페이징과-정렬\" style=\"position:relative;\"><a href=\"#%ED%8E%98%EC%9D%B4%EC%A7%95%EA%B3%BC-%EC%A0%95%EB%A0%AC\" aria-label=\"페이징과 정렬 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>페이징과 정렬</h2>\n<p>페이징 객체</p>\n<ul>\n<li>org.springframework.data.domain.<strong>Pageable</strong> : 패이징 기능 (내부에 Sort객체 포함)</li>\n</ul>\n<p>반환 타입</p>\n<ul>\n<li>Page : count 쿼리 결과를 포함하는 페이징</li>\n<li>Slice : count 쿼리 없이 다음 페이지만 확인 (limit + 1 조회)</li>\n<li>List(자바 컬렉션) : count없이 결과만 반환</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// repository</span>\n<span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Member</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findPageByUsername</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Pageable</span> pageable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Slice</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Member</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findSliceByUsername</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Pageable</span> pageable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Member</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findListByUsername</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Pageable</span> pageable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>count를 포함하는 경우 성능상 이슈 발생 가능 ex) join이 많을 경우<br>\n-> <strong>@Query를 사용해 count 쿼리 분리 가능</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// repository</span>\n<span class=\"token annotation punctuation\">@Query</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"select m from Member m left join m.team t\"</span><span class=\"token punctuation\">,</span>\n        countQuery <span class=\"token operator\">=</span> <span class=\"token string\">\"select count(m.username) from Member m\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Member</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findByAge</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> age<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Pageable</span> pageable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"벌크성-수정-쿼리\" style=\"position:relative;\"><a href=\"#%EB%B2%8C%ED%81%AC%EC%84%B1-%EC%88%98%EC%A0%95-%EC%BF%BC%EB%A6%AC\" aria-label=\"벌크성 수정 쿼리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>벌크성 수정 쿼리</h2>\n<blockquote>\n<p>@Modifying 어노테이션 추가, 영속성 컨텍스트 초기화(clearAutomatically true 옵션, em.clear())</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Modifying</span><span class=\"token punctuation\">(</span>clearAutomatically <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Query</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"update Member m set m.age = m.age + 1 where m.age >= :age\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">bulkUpdateAgePlus</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol>\n<li>영속성 컨텍스트에 엔티티가 없는 상태에서 벌크 연산 먼저 실행</li>\n<li>영속성 컨텍스트에 엔티티가 있으면 벌크 연산 직후 영속성 컨텍스트 초기화</li>\n</ol>\n<h2 id=\"entitygraph\" style=\"position:relative;\"><a href=\"#entitygraph\" aria-label=\"entitygraph permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@EntityGraph</h2>\n<blockquote>\n<p>연관된 엔티티들을 SQL 한번에 조회하는 방법 -> <strong>패치 조인</strong> 사용\nJPQL 없이 패치 조인</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// JPQL + 엔티티 그래프</span>\n<span class=\"token annotation punctuation\">@EntityGraph</span><span class=\"token punctuation\">(</span>attributePaths <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"team\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Query</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"select m from Member m\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Member</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findMemberEntityGraph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 메서드 이름에서 사용</span>\n<span class=\"token annotation punctuation\">@EntityGraph</span><span class=\"token punctuation\">(</span>attributePaths <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"team\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Member</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findByUsername</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> username<span class=\"token punctuation\">)</span></code></pre></div>\n<h1 id=\"jpa-hint\" style=\"position:relative;\"><a href=\"#jpa-hint\" aria-label=\"jpa hint permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JPA Hint</h1>\n<blockquote>\n<p>@QueryHints 어노테이션 사용해 readOnly 속성 사용</p>\n</blockquote>\n<p>JPA도 @Lock 어노테이션으로 트랜잭션 처리의 순차성을 보장하기 위해 DB Lock 지원</p>\n<p>관련된 내용은 추가로 정리 예정</p>\n<h1 id=\"사용자-정의-인터페이스\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%A0%95%EC%9D%98-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4\" aria-label=\"사용자 정의 인터페이스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용자 정의 인터페이스</h1>\n<ol>\n<li>Custom interface 생성</li>\n<li>Custom interface 을 상속받은 사용자 정의 구현 클래스 생성</li>\n<li>기존 Repository Interface에 Custom interface를 상속 받는다.</li>\n</ol>\n<p>사용자 정의 구현 클래스</p>\n<ul>\n<li><strong>규칙: 리포지토리 인터페이스 이름 + Impl</strong> ex) MemberRepositoryImpl</li>\n<li>2.x 버전부터는 <strong>사용자 정의 인터페이스 명 + Impl</strong> 지원 ex) MemberRepositoryCustomImpl</li>\n<li>스프링 데이터 JPA가 인식해서 스프링 빈으로 등록<br>\n(따로 Bean 관련 어노테이션 붙이지 않아도 된다)</li>\n</ul>\n<p>다른 이름으로 적용하고 싶으면 설정 변경</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@EnableJpaRepositories</span><span class=\"token punctuation\">(</span>basePackages <span class=\"token operator\">=</span> <span class=\"token string\">\"study.datajpa.repository\"</span><span class=\"token punctuation\">,</span>\n                           repositoryImplementationPostfix <span class=\"token operator\">=</span> <span class=\"token string\">\"Impl\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Custom 기능은 확장하는 기능으로 관리의 복잡도가 높아질 수 있음<br>\n-> 레포지토리를 기능에 따라 분리해 작성</p>\n<p>핵심은</p>\n<ol>\n<li>쿼리와 커맨드 분리</li>\n<li>핵심 비즈니스 로직 / 아닌 부분 분리</li>\n</ol>\n<h1 id=\"auditing\" style=\"position:relative;\"><a href=\"#auditing\" aria-label=\"auditing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Auditing</h1>\n<blockquote>\n<p>엔티티 생성, 변경할 때 변경한 사람과 시간을 추적하는데 사용\n보통 <strong>1) 등록일, 2)수정일 -기본 / 추가로 3)등록자, 4)수정자(로그인 한 세션정보 기반)</strong></p>\n</blockquote>\n<p>순수 JPA 사용, Spring JPA 사용 2가지 방법 존재</p>\n<p>Spring JPA 사용 방법</p>\n<ol>\n<li>@EnableJpaAuditing 어노테이션 <strong>스프링 부트 설정 클래스에 적용</strong></li>\n<li>@EntityListeners(AuditingEntityListener.class) 어노테이션 <strong>엔티티에 적용</strong></li>\n<li>공통 매핑 정보 사용을 위한 @MappedSuperclass 어노테이션 <strong>엔티티에 적용</strong></li>\n</ol>\n<p>관련 어노테이션</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@CreatedDate</span>\n<span class=\"token annotation punctuation\">@LastModifiedDate</span>\n<span class=\"token annotation punctuation\">@CreatedBy</span>\n<span class=\"token annotation punctuation\">@LastModifiedBy</span></code></pre></div>\n<h1 id=\"domain-class-converter\" style=\"position:relative;\"><a href=\"#domain-class-converter\" aria-label=\"domain class converter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Domain Class Converter</h1>\n<blockquote>\n<p>HTTP 파라미터로 넘어온 엔티티의 아이디로 엔티티 객체를 찾아서 바인딩</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/members/{id}\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">findMember</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Member</span> member<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> member<span class=\"token punctuation\">.</span><span class=\"token function\">getUsername</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>도메인 클래스 컨버터로 엔티티를 파라미터로 받으면 <strong>단순 조회용으로 사용</strong><br>\n-> <strong>트랜잭션이 없는 범위에서 엔티티를 조회</strong>하기 때문 (권장x)</p>\n<h1 id=\"페이징-정렬\" style=\"position:relative;\"><a href=\"#%ED%8E%98%EC%9D%B4%EC%A7%95-%EC%A0%95%EB%A0%AC\" aria-label=\"페이징 정렬 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>페이징, 정렬</h1>\n<blockquote>\n<p>Pageable객체를 파라미터로 받아 페이징, 정렬 기능 사용 가능</p>\n</blockquote>\n<ul>\n<li>org.springframework.data.domain.PageRequest tkdyd</li>\n<li>사용 파라미터 : page(0부터 시작), size, sort</li>\n</ul>\n<h2 id=\"설정-방법\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%A0%95-%EB%B0%A9%EB%B2%95\" aria-label=\"설정 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설정 방법</h2>\n<p>글로벌 설정 - 스프링 부트 설정</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token comment\"># Application.yml</span>\n<span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">web</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">pageable</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">default-page-size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span> <span class=\"token comment\"># 기본 페이지 사이즈</span>\n      <span class=\"token key atrule\">max-page-size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2000</span> <span class=\"token comment\"># 최대 페이지 사이즈</span></code></pre></div>\n<p>개별 설정 - @PageableDefault 어노테이션 사용</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"/members_page\"</span><span class=\"token punctuation\">,</span> method <span class=\"token operator\">=</span> <span class=\"token class-name\">RequestMethod</span><span class=\"token punctuation\">.</span><span class=\"token constant\">GET</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PageableDefault</span><span class=\"token punctuation\">(</span>size <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> sort <span class=\"token operator\">=</span> <span class=\"token string\">\"username\"</span><span class=\"token punctuation\">,</span>\n                    direction <span class=\"token operator\">=</span> <span class=\"token class-name\">Sort<span class=\"token punctuation\">.</span>Direction</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DESC</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Pageable</span> pageable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"멀티-페이징-시\" style=\"position:relative;\"><a href=\"#%EB%A9%80%ED%8B%B0-%ED%8E%98%EC%9D%B4%EC%A7%95-%EC%8B%9C\" aria-label=\"멀티 페이징 시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>멀티 페이징 시</h3>\n<blockquote>\n<p>페이징 정보가 둘이상이면 접두사로 구분 -> @Qualifier에 접두사 추가</p>\n</blockquote>\n<p>ex) /members?member<em>page=0&#x26;order</em>page=1</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> list <span class=\"token punctuation\">(</span>\n  <span class=\"token annotation punctuation\">@Qualifier</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"member\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Pageable</span> memberPageable<span class=\"token punctuation\">,</span>\n  <span class=\"token annotation punctuation\">@Qualifier</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"order\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Pageable</span> orderPageable<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"page-1부터-시작-시\" style=\"position:relative;\"><a href=\"#page-1%EB%B6%80%ED%84%B0-%EC%8B%9C%EC%9E%91-%EC%8B%9C\" aria-label=\"page 1부터 시작 시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Page 1부터 시작 시</h3>\n<ul>\n<li>직접 클래스 만들어 변환 후 PageRequest 생성 -> 레포지토리에서 사용</li>\n<li>응답도 Page 대신 직접 만들어 제공</li>\n</ul>\n<h1 id=\"스프링-데이터-jpa-구현체\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%8D%B0%EC%9D%B4%ED%84%B0-jpa-%EA%B5%AC%ED%98%84%EC%B2%B4\" aria-label=\"스프링 데이터 jpa 구현체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스프링 데이터 JPA 구현체</h1>\n<blockquote>\n<p>org.springframework.data.jpa.repository.support.SimpleJpaRepository</p>\n</blockquote>\n<ul>\n<li>구현체를 살펴보면 class레벨에 @Repository, @Transactional(readOnly = true) 적용</li>\n<li>save() 같은 경우 readOnly false (default)</li>\n</ul>\n<h2 id=\"readonly\" style=\"position:relative;\"><a href=\"#readonly\" aria-label=\"readonly permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>readOnly</h2>\n<blockquote>\n<p>기본값은 false 이며 true 로 세팅하는 경우 트랜잭션을 읽기 전용으로 변경</p>\n</blockquote>\n<ul>\n<li>읽기 전용 트랜잭션 내에서 INSERT, UPDATE, DELETE 작업을 해도 반영x</li>\n<li><strong>성능 향상을 위해 사용</strong>하거나 읽기 외 다른 동작 방지위해 사용</li>\n</ul>\n<h3 id=\"dirty-checking-무시\" style=\"position:relative;\"><a href=\"#dirty-checking-%EB%AC%B4%EC%8B%9C\" aria-label=\"dirty checking 무시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dirty Checking 무시</h3>\n<blockquote>\n<p>개발자가 임의로 UPDATE 쿼리를 사용하지 않아도 트랜잭션 커밋 시에 1차 캐시에 저장되어 있는 Entity 와 스냅샷을 비교해서 변경된 부분이 있으면 UPDATE 쿼리를 날려주는 기능</p>\n</blockquote>\n<p>-> readOnly=true 설정 시 스프링 프레임워크가 Hibernate의 FlushMode를 <strong>MANUAL로 설정</strong><br>\n-> 플러시 할 때 일어나는 스냅샷 비교와 같은 무거운 로직 수행x</p>\n<h1 id=\"새로운-엔티티-구분\" style=\"position:relative;\"><a href=\"#%EC%83%88%EB%A1%9C%EC%9A%B4-%EC%97%94%ED%8B%B0%ED%8B%B0-%EA%B5%AC%EB%B6%84\" aria-label=\"새로운 엔티티 구분 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>새로운 엔티티 구분</h1>\n<p>save() 메서드는</p>\n<ul>\n<li>새로운 엔티티면 저장 - em.persist()</li>\n<li>새로운 엔티티가 아니면 병합 - em.merge()</li>\n</ul>\n<p>객체일 때 <strong>null</strong>로 판단<br>\n자바 기본 타입일 때 <strong>0</strong>으로 판단<br>\n-> 식별자 생성 전략이 @Id만 사용해 <strong>직접 할당</strong>할 때 문제 발생</p>\n<p><strong>Persistable 인터페이스 구현해 새로운 엔티티 판단</strong><br>\n-> 새로운 엔티티인지 확인하는 isNew 함수 구현\n-> @CreatedDate 조합하면 편리하게 확인 가능</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Entity</span>\n<span class=\"token annotation punctuation\">@EntityListeners</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AuditingEntityListener</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@NoArgsConstructor</span><span class=\"token punctuation\">(</span>access <span class=\"token operator\">=</span> <span class=\"token class-name\">AccessLevel</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PROTECTED</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Item</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Persistable</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Id</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> id<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@CreatedDate</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDateTime</span> createdDate<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Item</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isNew</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> createdDate <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"tip\" style=\"position:relative;\"><a href=\"#tip\" aria-label=\"tip permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tip!!</h1>\n<ul>\n<li>gradle 의존관계 확인 command</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">./gradlew dependencies <span class=\"token parameter variable\">--configuration</span> compileClasspath</code></pre></div>\n<p>@Inheritance -> 다형성을 위한 상속 (상속 관계 매핑)<br>\n@Embedded, @Embeddable -> 합성 (복합 값 타입 사용 시)<br>\n@MappedSuperclass -> 객체의 입장에서 공통 매핑 정보가 필요할 때 사용</p>\n<h1 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h1>\n<ul>\n<li><a href=\"https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81-%EB%8D%B0%EC%9D%B4%ED%84%B0-JPA-%EC%8B%A4%EC%A0%84/dashboard\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">실전! 스프링 데이터 JPA</a></li>\n<li><a href=\"https://docs.spring.io/spring-data/jpa/docs/current/reference/html/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Spring data JPA Document</a></li>\n</ul>","excerpt":"공통 인터페이스 설정 @SpringBootApplication위치에 @EnableJpaRepositories설정 (스프링 부트 사용시 생략 가능) JpaRepository를 상속받아 인터페이스 JpaRepository내 구현된 메소드 사용 필요 시 …","tableOfContents":"<ul>\n<li><a href=\"/JPA_4/#%EA%B3%B5%ED%86%B5-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4-%EC%84%A4%EC%A0%95\">공통 인터페이스 설정</a></li>\n<li>\n<p><a href=\"/JPA_4/#%EC%BF%BC%EB%A6%AC-%EB%A9%94%EC%86%8C%EB%93%9C\">쿼리 메소드</a></p>\n<ul>\n<li><a href=\"/JPA_4/#%EB%A9%94%EC%86%8C%EB%93%9C-%EC%9D%B4%EB%A6%84%EC%9C%BC%EB%A1%9C-%EC%BF%BC%EB%A6%AC-%EC%83%9D%EC%84%B1\">메소드 이름으로 쿼리 생성</a></li>\n<li><a href=\"/JPA_4/#namedquery\">NamedQuery</a></li>\n<li><a href=\"/JPA_4/#query---%EB%A6%AC%ED%8C%8C%EC%A7%80%ED%86%A0%EB%A6%AC-%EB%A9%94%EC%86%8C%EB%93%9C%EC%97%90-%EC%BF%BC%EB%A6%AC-%EC%A0%95%EC%9D%98-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0-%EB%B0%94%EC%9D%B8%EB%94%A9\">@Query - 리파지토리 메소드에 쿼리 정의 파라미터 바인딩</a></li>\n<li><a href=\"/JPA_4/#%EB%B0%98%ED%99%98-%ED%83%80%EC%9E%85\">반환 타입</a></li>\n<li><a href=\"/JPA_4/#%ED%8E%98%EC%9D%B4%EC%A7%95%EA%B3%BC-%EC%A0%95%EB%A0%AC\">페이징과 정렬</a></li>\n<li><a href=\"/JPA_4/#%EB%B2%8C%ED%81%AC%EC%84%B1-%EC%88%98%EC%A0%95-%EC%BF%BC%EB%A6%AC\">벌크성 수정 쿼리</a></li>\n<li><a href=\"/JPA_4/#entitygraph\">@EntityGraph</a></li>\n</ul>\n</li>\n<li><a href=\"/JPA_4/#jpa-hint\">JPA Hint</a></li>\n<li><a href=\"/JPA_4/#%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%A0%95%EC%9D%98-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4\">사용자 정의 인터페이스</a></li>\n<li><a href=\"/JPA_4/#auditing\">Auditing</a></li>\n<li><a href=\"/JPA_4/#domain-class-converter\">Domain Class Converter</a></li>\n<li>\n<p><a href=\"/JPA_4/#%ED%8E%98%EC%9D%B4%EC%A7%95-%EC%A0%95%EB%A0%AC\">페이징, 정렬</a></p>\n<ul>\n<li>\n<p><a href=\"/JPA_4/#%EC%84%A4%EC%A0%95-%EB%B0%A9%EB%B2%95\">설정 방법</a></p>\n<ul>\n<li><a href=\"/JPA_4/#%EB%A9%80%ED%8B%B0-%ED%8E%98%EC%9D%B4%EC%A7%95-%EC%8B%9C\">멀티 페이징 시</a></li>\n<li><a href=\"/JPA_4/#page-1%EB%B6%80%ED%84%B0-%EC%8B%9C%EC%9E%91-%EC%8B%9C\">Page 1부터 시작 시</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/JPA_4/#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%8D%B0%EC%9D%B4%ED%84%B0-jpa-%EA%B5%AC%ED%98%84%EC%B2%B4\">스프링 데이터 JPA 구현체</a></p>\n<ul>\n<li>\n<p><a href=\"/JPA_4/#readonly\">readOnly</a></p>\n<ul>\n<li><a href=\"/JPA_4/#dirty-checking-%EB%AC%B4%EC%8B%9C\">Dirty Checking 무시</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/JPA_4/#%EC%83%88%EB%A1%9C%EC%9A%B4-%EC%97%94%ED%8B%B0%ED%8B%B0-%EA%B5%AC%EB%B6%84\">새로운 엔티티 구분</a></li>\n<li><a href=\"/JPA_4/#tip\">Tip!!</a></li>\n<li><a href=\"/JPA_4/#reference\">Reference</a></li>\n</ul>","fields":{"slug":"/JPA_4/"},"frontmatter":{"title":"실전 스프링 데이터 JPA","date":"Sep 28, 2022","tags":["JPA"],"keywords":["JPA"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/JPA_4/","series":[{"slug":"/JPA_1/","title":"자바 ORM 표준 JPA 프로그래밍 (기본편)","num":1},{"slug":"/JPA_2/","title":"실전! 스프링 부트와 JPA 활용1 - 웹 애플리케이션 개발","num":2},{"slug":"/JPA_3/","title":"실전! 스프링 부트와 JPA 활용2 - API 개발과 성능 최적화","num":3},{"slug":"/JPA_4/","title":"실전 스프링 데이터 JPA","num":4}],"lastmod":"2022-09-28"}},"staticQueryHashes":["2027115977","694178885"]}