{"componentChunkName":"component---src-templates-post-tsx","path":"/bashMission/","result":{"data":{"markdownRemark":{"html":"<p>bash 쉘 20문제를 풀어보자</p>\n<h2 id=\"풀이\" style=\"position:relative;\"><a href=\"#%ED%92%80%EC%9D%B4\" aria-label=\"풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>풀이</h2>\n<ol>\n<li>현재 자기신의 pc(linux기준)의 cpu모델명, Os 종류 및 버전, kernel 버전을 출력하시오.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> /proc/cpuinfo <span class=\"token operator\">|</span> <span class=\"token function\">egrep</span>  <span class=\"token string\">'model name'</span>\n<span class=\"token function\">cat</span> /etc/issue\n<span class=\"token function\">uname</span> -r</code></pre></div>\n<ol start=\"2\">\n<li>매주 일요일, 새벽4시 30분과 낮12시 30분에, /tmp/* 를 삭제하는 crontab\n예) * * * * * 실행문</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token function\">crontab</span> -l<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"30 4,12 * * * rm /tmp/*\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token function\">crontab</span>\n<span class=\"token function\">crontab</span> -l</code></pre></div>\n<ol start=\"3\">\n<li>정수인자 2개를 받아 인자 개수 검증 후 4칙연산별 함수를 구현하여 결과값을 모두 </li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">function</span> <span class=\"token function-name function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token builtin class-name\">let</span> <span class=\"token assign-left variable\">value</span><span class=\"token operator\">=</span><span class=\"token variable\">$1</span>+<span class=\"token variable\">$2</span>\n\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span> + <span class=\"token variable\">$2</span> : <span class=\"token variable\">${value}</span>\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function-name function\">minus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token builtin class-name\">let</span> <span class=\"token assign-left variable\">value</span><span class=\"token operator\">=</span><span class=\"token variable\">$1</span>-<span class=\"token variable\">$2</span>\n\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span> - <span class=\"token variable\">$2</span> : <span class=\"token variable\">${value}</span>\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function-name function\">multiply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token builtin class-name\">let</span> <span class=\"token assign-left variable\">value</span><span class=\"token operator\">=</span><span class=\"token variable\">$1</span>*<span class=\"token variable\">$2</span>\n\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span> * <span class=\"token variable\">$2</span> : <span class=\"token variable\">${value}</span>\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function-name function\">divide</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token builtin class-name\">let</span> <span class=\"token assign-left variable\">value</span><span class=\"token operator\">=</span><span class=\"token variable\">$1</span>/<span class=\"token variable\">$2</span>\n\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span> / <span class=\"token variable\">$2</span> : <span class=\"token variable\">${value}</span>\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">add</span> <span class=\"token variable\">$1</span> <span class=\"token variable\">$2</span>\nminus <span class=\"token variable\">$1</span> <span class=\"token variable\">$2</span>\nmultiply <span class=\"token variable\">$1</span> <span class=\"token variable\">$2</span>\ndivide <span class=\"token variable\">$1</span> <span class=\"token variable\">$2</span></code></pre></div>\n<ol start=\"4\">\n<li>2초마다 현재시간을 출력하는 스크립트를 작성하세요.</li>\n</ol>\n<p>(3번 실행되도록 작성)</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">number</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$number</span> -le <span class=\"token number\">2</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">do</span>\n\t<span class=\"token function\">date</span>\n\t<span class=\"token variable\"><span class=\"token punctuation\">((</span>number<span class=\"token operator\">++</span><span class=\"token punctuation\">))</span></span>\n\t<span class=\"token function\">sleep</span> <span class=\"token number\">2</span>\n<span class=\"token keyword\">done</span></code></pre></div>\n<ol start=\"5\">\n<li>첨부파일 lastlog를 이용하여 한번도 로그인한 적 없는 사용자를 삭제하는 명령어를 문자열로 아래와 같이 출력.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">while</span> <span class=\"token builtin class-name\">read</span> A B C D E F G H I\n<span class=\"token keyword\">do</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$B</span>\"</span> <span class=\"token operator\">=</span>~ <span class=\"token string\">\"**Never\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n\t\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"userdel -r \"</span> <span class=\"token variable\">$A</span>\n\t<span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">done</span> <span class=\"token operator\">&lt;</span> lastlog</code></pre></div>\n<ol start=\"6\">\n<li>첨부파일 lastlog를 이용하여 로그인한 적 없는 사용자를 제외하고 년 월 일 시간 사용자계정 순서로 아래와 같이 출력 i</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">while</span> <span class=\"token builtin class-name\">read</span> A B C D E F G H I\n<span class=\"token keyword\">do</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$B</span>\"</span> <span class=\"token operator\">=</span>~ <span class=\"token string\">\"pts\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n\t\t<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">${I<span class=\"token operator\">:</span>0<span class=\"token operator\">:-</span>1}</span> <span class=\"token variable\">$E</span> <span class=\"token variable\">$F</span> <span class=\"token variable\">$G</span> <span class=\"token variable\">$A</span>\n\t<span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">done</span> <span class=\"token operator\">&lt;</span> lastlog</code></pre></div>\n<ol start=\"7\">\n<li>첨부파일 lastlog를 이용하여 ntp와 firenwo user 라인사이에 ‘end of system user’라인 삽입.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sed</span> -i<span class=\"token string\">''</span> -r -e <span class=\"token string\">\"/ntp/a<span class=\"token entity\" title=\"\\e\">\\e</span>nd of system user\"</span> lastlog\n<span class=\"token function\">cat</span> lastlog</code></pre></div>\n<ol start=\"8\">\n<li>첨부파일 checkpassword를 이용하여 09:59:57부터 10:21:45까지의 라인만 출력</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> checkpassword <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'/[9]:59:5[7-9]/'</span>\n<span class=\"token function\">cat</span> checkpassword <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'/[10]:[0-1][0-9]:[0-5][0-9]/'</span>\n<span class=\"token function\">cat</span> checkpassword <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'/[10]:2[0-1]:[0-3][0-9]/'</span>\n<span class=\"token function\">cat</span> checkpassword <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'/[10]:21:4[0-5]/'</span></code></pre></div>\n<ol start=\"9\">\n<li>첨부파일 checkpassword를 이용하여 121.156.118.254를 pop3.mailplug.co.kr로, 14.36.253.67는 office.ip.wiro.kr로 치환하여 출력</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> checkpassword <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token string\">'s/121.156.118.254/pop3.mailplug.co.kr/g'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token string\">'s/14.36.253.67/office.ip.wiro.kr/g'</span> checkpassword</code></pre></div>\n<ol start=\"10\">\n<li>첨부파일 maillog를 이용하여 root@ma10.mailplug.co.kr에서 수신된 메일의 수를 출력</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">index</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token builtin class-name\">read</span> line\n<span class=\"token keyword\">do</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$line</span>\"</span> <span class=\"token operator\">=</span>~ <span class=\"token string\">\"from &lt;root@ma10.mailplug.co.kr>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n\t\t<span class=\"token builtin class-name\">let</span> <span class=\"token assign-left variable\">value</span><span class=\"token operator\">=</span><span class=\"token variable\">$index</span>+1\n\t\t<span class=\"token assign-left variable\">index</span><span class=\"token operator\">=</span><span class=\"token variable\">$value</span>\n\t<span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">done</span> <span class=\"token operator\">&lt;</span> maillog\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$index</span></code></pre></div>\n<ol start=\"11\">\n<li>첨부파일 maillog를 이용하여 시간별 총 용량만 아래와 같이 출력(bytes)</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">while</span> <span class=\"token builtin class-name\">read</span> <span class=\"token function\">time</span> byte\n<span class=\"token keyword\">do</span>\n\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$time</span> <span class=\"token variable\">$byte</span>\"</span>\n<span class=\"token keyword\">done</span> <span class=\"token operator\">&lt;</span> maillog <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> bytes <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{print <span class=\"token variable\">$3</span>\":\"<span class=\"token variable\">$11</span>}'</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> -F <span class=\"token string\">\":\"</span> <span class=\"token string\">'{arr[<span class=\"token variable\">$1</span>]+=<span class=\"token variable\">$4</span>} END { for (i in arr) {print i \"<span class=\"token entity\" title=\"\\t\">\\t</span>\" arr[i]}}'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{ if(<span class=\"token variable\">$1</span>~\"(0[0-9])\") {sub(/0/,\"\")} print <span class=\"token variable\">$1</span> \"시<span class=\"token entity\" title=\"\\t\">\\t</span>\" <span class=\"token variable\">$2</span>}'</span></code></pre></div>\n<ol start=\"12\">\n<li>첨부파일 conf를 이용하여 ; 로된 주석라인과 공백라인을 제외한 라인 출력</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> conf <span class=\"token operator\">|</span> <span class=\"token function\">egrep</span> -v ^<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>:space:<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>*$ <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -v <span class=\"token string\">\";\"</span></code></pre></div>\n<ol start=\"13\">\n<li>ps 명령어를 이용하여 pid값이 낮은순에서 높은순으로 정렬하여 출력</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">ps</span> -ef --sort<span class=\"token operator\">=</span>+pid </code></pre></div>\n<ol start=\"14\">\n<li>첨부파일 nginx를 이용하여 접근을 한 국가별 카운트와 국가명 출력.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">while</span> <span class=\"token builtin class-name\">read</span> A B C D E F line\n<span class=\"token keyword\">do</span>\n\tgeoiplookup <span class=\"token variable\">$F</span> <span class=\"token operator\">>></span> <span class=\"token function\">ip</span>\n<span class=\"token keyword\">done</span> <span class=\"token operator\">&lt;</span> nginx\n\n<span class=\"token function\">grep</span> <span class=\"token string\">''</span> <span class=\"token function\">ip</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{print <span class=\"token variable\">$1</span>,<span class=\"token variable\">$2</span>,<span class=\"token variable\">$3</span>,<span class=\"token variable\">$4</span>,<span class=\"token variable\">$5</span>,<span class=\"token variable\">$6</span>,<span class=\"token variable\">$7</span>}'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token operator\">|</span> <span class=\"token function\">uniq</span> -c <span class=\"token operator\">></span> 14result\n<span class=\"token function\">cat</span> 14result\n<span class=\"token function\">rm</span> <span class=\"token function\">ip</span></code></pre></div>\n<ol start=\"15\">\n<li>첨부파일 nginx를 이용하여 3번 이상 접근한 국가별 카운트와 국가명 출력</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> 14result <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{if (<span class=\"token variable\">$1</span>>3) {print <span class=\"token variable\">$0</span>}}'</span></code></pre></div>\n<ol start=\"16\">\n<li>반복문을 이용하여 1M의 용량을 가진 파일부터 10M까지의 총 10개 파일 생성(1M씩 증가)</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">time</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">{</span>01<span class=\"token punctuation\">..</span><span class=\"token number\">10</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">do</span>\n\ttruncate -s <span class=\"token variable\">${time}</span>M ./<span class=\"token variable\">${time}</span><span class=\"token function\">file</span>\n<span class=\"token keyword\">done</span>\n\n<span class=\"token function\">find</span> ./ -name <span class=\"token string\">\"*file\"</span></code></pre></div>\n<ol start=\"17\">\n<li>16번에서 생성한 파일 중 5M이상의 파일의 생성시간을 2017년 12월 31일로 변경</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">find</span> ./ -type f -size +5M -exec <span class=\"token function\">touch</span> -t <span class=\"token string\">\"201712310000\"</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"18\">\n<li>17번에서 만든 파일 중 2017년 12월 31일 이후에 만들어진 파일을 찾아 해당파일명.new로 변경</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">find</span> -type f -newermt <span class=\"token string\">'2017-12-31'</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token function\">file</span> <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span> <span class=\"token function\">rename</span> <span class=\"token string\">'s/file/file.new/'</span></code></pre></div>\n<ol start=\"19\">\n<li>아래 그림을 test.c 파일로 작성 후 result.exe란 파일로 컴파일하여 실행하고 출력값을 test.txt로 저장</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">gcc -o result test.c\n./result <span class=\"token operator\">></span> test.txt\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"test.txt 파일 내용\"</span>\n<span class=\"token function\">cat</span> test.txt</code></pre></div>\n<ol start=\"20\">\n<li>121.156.118.15서버의 오픈 된 포트를 확인 후 해당 포트로 통신이 가능한지 모니터링하는 스크립트를 작성</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">while</span> <span class=\"token builtin class-name\">:</span>\n<span class=\"token keyword\">do</span>\n\tnmap -sT <span class=\"token number\">121.156</span>.118.15\n\t<span class=\"token function\">sleep</span> <span class=\"token number\">5</span>\n<span class=\"token keyword\">done</span></code></pre></div>\n<p>모든 bash 파일 실행</p>\n<p>result.bash</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">..</span><span class=\"token number\">19</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">do</span>\n\t<span class=\"token function\">bash</span> <span class=\"token variable\">$i</span>.bash <span class=\"token number\">5</span> <span class=\"token number\">5</span>\n\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\" \"</span>\n<span class=\"token keyword\">done</span>\n<span class=\"token function\">rm</span> 01file.new 02file.new 03file.new 04file.new 05file.new 06file 07file 08file 09file 10file\n\n<span class=\"token function\">bash</span> <span class=\"token number\">20</span>.bash</code></pre></div>\n<h2 id=\"배운-부분\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%9A%B4-%EB%B6%80%EB%B6%84\" aria-label=\"배운 부분 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배운 부분</h2>\n<p>2번</p>\n<ul>\n<li>매주 일요일 부분을 빠트림</li>\n</ul>\n<p>6번</p>\n<ul>\n<li>Window와 Linux는 개행 방식이 다르다.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>window</th>\n<th>Unix(Linux 및 Mac)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\\r\\n</td>\n<td>\\n</td>\n</tr>\n</tbody>\n</table>\n<p><strong>vscode같은 곳에서 연결해서 사용한다면 관련된 설정 해줘야 한다.</strong></p>\n<p>17번</p>\n<ul>\n<li>문제를 보면 5M이상임. -size +4M으로 작성해야 한다.</li>\n</ul>\n<p>주의할점</p>\n<ul>\n<li>dd 명령어 사용 시 input / output에 주의해라!</li>\n<li>chown 명령어 사용 시 -R 옵션 줄 때 ./* 같이 경로를 정확히 사용 (/ 이렇게 주면 큰일난다.)</li>\n</ul>\n<p>중요한 명령어와 개념</p>\n<ul>\n<li>find, ls, du, awk, sed, free, chown, chmod, 리눅스 권한부분은 상당히 중요!</li>\n</ul>","excerpt":"bash 쉘 20문제를 풀어보자 풀이 현재 자기신의 pc(linux기준)의 cpu모델명, Os 종류 및 버전, kernel 버전을 출력하시오. 매주 일요일, 새벽4시 30분과 낮12시 30분에, /tmp/* 를 삭제하는 crontab \n예) * * …","tableOfContents":"<ul>\n<li><a href=\"/bashMission/#%ED%92%80%EC%9D%B4\">풀이</a></li>\n<li><a href=\"/bashMission/#%EB%B0%B0%EC%9A%B4-%EB%B6%80%EB%B6%84\">배운 부분</a></li>\n</ul>","fields":{"slug":"/bashMission/"},"frontmatter":{"title":"bash 문제 풀이","date":"Feb 23, 2021","tags":["Linux"],"keywords":["linux","Linux"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/bashMission/","series":[],"lastmod":"2021-02-23"}},"staticQueryHashes":["2027115977","694178885"]}