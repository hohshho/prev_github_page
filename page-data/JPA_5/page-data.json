{"componentChunkName":"component---src-templates-post-tsx","path":"/JPA_5/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"querydsl-이란\" style=\"position:relative;\"><a href=\"#querydsl-%EC%9D%B4%EB%9E%80\" aria-label=\"querydsl 이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>QueryDSL 이란?</h1>\n<blockquote>\n<p><strong>Querydsl</strong>을 통해 생성되는 정적 Q-type 클래스를 이용해 쿼리를 생성하도록 도와주는 프레임 워크</p>\n</blockquote>\n<h2 id=\"jpql-vs-querydsl\" style=\"position:relative;\"><a href=\"#jpql-vs-querydsl\" aria-label=\"jpql vs querydsl permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JPQL vs Querydsl</h2>\n<p><strong>타입 체크, 오류 잡아주는 시점</strong><br>\nJPQL - 실행 시점 오류<br>\nQuerydsl - 컴파일 시점 오류</p>\n<p><strong>파라미터 바인딩</strong><br>\nJPQL - 파라미터 바인딩 직접<br>\nQuerydsl - 파라미터 바인딩 자동 처리</p>\n<h2 id=\"buildgradle\" style=\"position:relative;\"><a href=\"#buildgradle\" aria-label=\"buildgradle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>build.gradle</h2>\n<p>build.gradle에 queryDSL 설정 추가</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># build.gradle\nbuildscript {\n  ext {\n    queryDslVersion = \"5.0.0\"\n  }\n}\n\nplugin {\n  ...\n  id \"com.ewerk.gradle.plugins.querydsl\" version \"1.0.10\"\n  ...\n}\n\ndependencies {\n  ...\n  implementation \"com.querydsl:querydsl-jpa:${queryDslVersion}\"\n  implementation \"com.querydsl:querydsl-apt:${queryDslVersion}\"\n  ...\n}\n\ndef querydslDir = \"$buildDir/generated/querydsl\"\n\nquerydsl {\n  jpa = true\n  querydslSourcesDir = querydslDir\n}\nsourceSets {\n  main.java.srcDir querydslDir\n}\ncompileQuerydsl{\n  options.annotationProcessorPath = configurations.querydsl\n}\nconfigurations {\n  compileOnly {\n    extendsFrom annotationProcessor\n  }\n  querydsl.extendsFrom compileClasspath\n}</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># queryDSL Q타입 생성 (git ignore 설정 필요)</span>\n<span class=\"token comment\"># build.gradle에 설정한 명령어</span>\n./gradlew clean compileQuerydsl\n\n<span class=\"token comment\"># Gradle 의존관계 확인</span>\n./gradlew dependencies <span class=\"token parameter variable\">--configuration</span> compileClasspath</code></pre></div>\n<p><strong>Querydsl 라이브러리</strong></p>\n<ul>\n<li>querydsl-apt: Querydsl 관련 코드 생성 기능 제공</li>\n<li>querydsl-jpa: querydsl 라이브러리</li>\n</ul>\n<h1 id=\"querydsl-활용\" style=\"position:relative;\"><a href=\"#querydsl-%ED%99%9C%EC%9A%A9\" aria-label=\"querydsl 활용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>QueryDSL 활용</h1>\n<h2 id=\"querydsl-bean-등록\" style=\"position:relative;\"><a href=\"#querydsl-bean-%EB%93%B1%EB%A1%9D\" aria-label=\"querydsl bean 등록 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>QueryDSL Bean 등록</h2>\n<p>repository 작성 시 JPA에 접근하기 위한 EntityManager와 QueryDSL을 사용하기 위한 JPAQueryFactory를 주입받아야 하는데</p>\n<p>EntityManager의 경우 Spring에 Bean으로 등록되어 있어 생성자 주입으로 주입이 가능</p>\n<p>queryFactory도 생성자 주입으로 주입 받고 싶을 경우엔 SpringBoot에 Bean으로 등록시키고 생성자 생성시 주입받으면 된다.<br>\n(AppConfig를 만들어 적용)</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token annotation punctuation\">@RequiredArgsConstructor</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Appconfig</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">EntityManager</span> em<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">JPAQueryFactory</span> <span class=\"token function\">queryFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JPAQueryFactory</span><span class=\"token punctuation\">(</span>em<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>JPA 접근 시 EntityManager 필요</li>\n<li>JPAQueryFatory는 QueryDSl 쿼리 작성 클래스</li>\n</ul>\n<h2 id=\"동시성-문제\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EC%8B%9C%EC%84%B1-%EB%AC%B8%EC%A0%9C\" aria-label=\"동시성 문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동시성 문제</h2>\n<blockquote>\n<p>스프링은 여러 쓰레드에서 동시에 같은 EntityManager에 접근해도<br>\n트랜잭션 마다 별도의 영속성 컨텍스트 제공 -> <strong>동시성 문제 x</strong></p>\n</blockquote>\n<h2 id=\"qclass-인스턴스-사용-방법\" style=\"position:relative;\"><a href=\"#qclass-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%82%AC%EC%9A%A9-%EB%B0%A9%EB%B2%95\" aria-label=\"qclass 인스턴스 사용 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Qclass 인스턴스 사용 방법</h2>\n<ol>\n<li>별칭 직접 지정 -> 같은 테이블 조인 시</li>\n<li>기본 인스턴스 사용 -> static import로 전역선언 후 사용</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">//별칭 직접 지정</span>\n<span class=\"token class-name\">QMember</span> qMember <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QMember</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"m\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//기본 인스턴스 사용</span>\n<span class=\"token class-name\">QMember</span> qMember <span class=\"token operator\">=</span> <span class=\"token class-name\">QMember</span><span class=\"token punctuation\">.</span>member<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 전역 선언</span>\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">static</span> <span class=\"token import static\"><span class=\"token namespace\">study<span class=\"token punctuation\">.</span>querydsl<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">QMember</span><span class=\"token punctuation\">.</span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"검색-조건-추가\" style=\"position:relative;\"><a href=\"#%EA%B2%80%EC%83%89-%EC%A1%B0%EA%B1%B4-%EC%B6%94%EA%B0%80\" aria-label=\"검색 조건 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>검색 조건 추가</h2>\n<ul>\n<li>.and(), .or() 메서드 체인으로 연결</li>\n<li>JPQL이 제공하는 모든 검색 조건 제공</li>\n<li>and vs eq -> eq 사용 - 동적 쿼리 만들 때 null 무시하게 코드 작성 가능</li>\n</ul>\n<details>\n<summary><b>검색 조건 설정 (Toggle)</b></summary>\n<table>\n<thead>\n<tr>\n<th>표현</th>\n<th>결과</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>.eq(\"member\")</td>\n<td>username = 'member'</td>\n</tr>\n<tr>\n<td>.ne(\"member\")</td>\n<td>username != 'member'</td>\n</tr>\n<tr>\n<td>.eq(\"member\").not()</td>\n<td>username != 'member'</td>\n</tr>\n<tr>\n<td>.isNotNull()</td>\n<td>is not null</td>\n</tr>\n<tr>\n<td>.in(10, 20)</td>\n<td>in (10,20)</td>\n</tr>\n<tr>\n<td>.notIn(10, 20)</td>\n<td>not in (10, 20)</td>\n</tr>\n<tr>\n<td>.between(10,30)</td>\n<td>between 10, 30</td>\n</tr>\n<tr>\n<td>.goe(30)</td>\n<td>>= 30</td>\n</tr>\n<tr>\n<td>.gt(30)</td>\n<td>> 30</td>\n</tr>\n<tr>\n<td>.loe(30)</td>\n<td>&#x3C;= 30</td>\n</tr>\n<tr>\n<td>.lt(30)</td>\n<td>&#x3C; 30</td>\n</tr>\n<tr>\n<td>.like(\"member%\")</td>\n<td>like 검색</td>\n</tr>\n<tr>\n<td>.contains(\"member\")</td>\n<td>like ‘%member%’ 검색</td>\n</tr>\n<tr>\n<td>.startsWith(\"member\")</td>\n<td>like ‘member%’ 검색</td>\n</tr>\n</tbody>\n</table>\n</details>\n<h2 id=\"결과-조회\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EA%B3%BC-%EC%A1%B0%ED%9A%8C\" aria-label=\"결과 조회 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결과 조회</h2>\n<p><strong>fetch()</strong> : 리스트 조회, 데이터 없으면 빈 리스트 반환</p>\n<p><strong>fetchOne()</strong> : 단 건 조회</p>\n<ul>\n<li>결과가 없으면 : null</li>\n<li>결과가 둘 이상이면 : com.querydsl.core.NonUniqueResultException</li>\n</ul>\n<p><strong>fetchFirst()</strong> : limit(1).fetchOne()</p>\n<p><strong>fetchResults, fetchCount</strong> -> deprecated 되서 count용 쿼리 구현 후 사용</p>\n<h2 id=\"정렬\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A0%AC\" aria-label=\"정렬 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정렬</h2>\n<blockquote>\n<p>groupby 사용</p>\n</blockquote>\n<p>desc() , asc() : 일반 정렬\nnullsLast() , nullsFirst() : null 데이터 순서 부여</p>\n<p>SQL은 다중 정렬 시 왼쪽부터 순차 정렬</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token punctuation\">.</span><span class=\"token function\">orderBy</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">.</span><span class=\"token function\">desc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> member<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">.</span><span class=\"token function\">asc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">nullsLast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"집합\" style=\"position:relative;\"><a href=\"#%EC%A7%91%ED%95%A9\" aria-label=\"집합 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>집합</h2>\n<p>7가지 집합 함수 사용 가능</p>\n<h2 id=\"조인\" style=\"position:relative;\"><a href=\"#%EC%A1%B0%EC%9D%B8\" aria-label=\"조인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>조인</h2>\n<h4 id=\"기본-조인-페치-조인-적용\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8-%EC%A1%B0%EC%9D%B8-%ED%8E%98%EC%B9%98-%EC%A1%B0%EC%9D%B8-%EC%A0%81%EC%9A%A9\" aria-label=\"기본 조인 페치 조인 적용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본 조인 (페치 조인 적용)</h4>\n<ul>\n<li>join은 leftJoin, rightJoin 모두 가능</li>\n<li>join 이후에 on을 넣어 조건절 가능</li>\n<li>세타조인 또한 가능</li>\n<li><strong>.on()</strong> 절을 통해 <strong>조인 대상을 필터링</strong> 하거나 <strong>동적인 조건 연관관계 없이 조인</strong> 가능</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Member</span><span class=\"token punctuation\">></span></span> resultQuerydsl <span class=\"token operator\">=</span> queryFactory\n                <span class=\"token punctuation\">.</span><span class=\"token function\">selectFrom</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>team<span class=\"token punctuation\">,</span> team<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fetchJoin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// fetch join 가능</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Member</span><span class=\"token punctuation\">></span></span> result <span class=\"token operator\">=</span> queryFactory\n        <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">,</span> team<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span>team<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Tuple</span><span class=\"token punctuation\">></span></span> result <span class=\"token operator\">=</span> queryFactory\n        <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">,</span> team<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">leftJoin</span><span class=\"token punctuation\">(</span>team<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span>team<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"서브-쿼리\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B8%8C-%EC%BF%BC%EB%A6%AC\" aria-label=\"서브 쿼리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서브 쿼리</h2>\n<ul>\n<li>QueryDSL에서 제공하는 <strong>JPAExpressions</strong> 클래스를 사용해 서브쿼리 사용 가능</li>\n<li>alias가 중복되면 안되는 경우 Q-type 객체 생성해서 사용</li>\n<li>case문 사용 시 <strong>CaseBuilder</strong> 클래스 사용</li>\n<li>상수 사용 시 <strong>Expressions</strong> 클래스 사용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// 1. where절 서브쿼리</span>\n<span class=\"token class-name\">QMember</span> memberSub <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QMember</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"memberSub\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Member</span><span class=\"token punctuation\">></span></span> result <span class=\"token operator\">=</span> queryFactory\n        <span class=\"token punctuation\">.</span><span class=\"token function\">selectFrom</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span>\n                <span class=\"token class-name\">JPAExpressions</span>\n                        <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span>memberSub<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>memberSub<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 2. select절 서브쿼리</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Tuple</span><span class=\"token punctuation\">></span></span> fetch <span class=\"token operator\">=</span> queryFactory\n        <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span>\n                <span class=\"token class-name\">JPAExpressions</span>\n                        <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span>memberSub<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">.</span><span class=\"token function\">avg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>memberSub<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 3. case문</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> result <span class=\"token operator\">=</span> queryFactory\n             <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">CaseBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">.</span><span class=\"token function\">between</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0~20살\"</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">.</span><span class=\"token function\">between</span><span class=\"token punctuation\">(</span><span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"21~30살\"</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">otherwise</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"기타\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n             <span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">)</span>\n             <span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 4. 상수 사용</span>\n<span class=\"token class-name\">Tuple</span> result <span class=\"token operator\">=</span> queryFactory\n            <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Expressions</span><span class=\"token punctuation\">.</span><span class=\"token function\">constant</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">fetchFirst</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"프로젝션\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%EC%85%98\" aria-label=\"프로젝션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝션</h2>\n<ul>\n<li>간단한 몇 가지 프로퍼티들만 조회 할 경우엔 Q-type 객체의 프로퍼티를 넘겨주면 된다.</li>\n<li>\n<p>Dto를 사용해 select 할 경우엔 3가지 방법이 가능하다</p>\n<ul>\n<li>프로퍼티 접근</li>\n<li>필드 직접 접근</li>\n<li>생성자 사용</li>\n</ul>\n</li>\n<li>프로퍼티, 필드 접근 시 이름이 다를 땐 <strong>ExpressionUtils.as(source,alias)</strong>를 사용해 필드나 서브쿼리에 별칭을 적용한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// 대상이 하나인 경우</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> result <span class=\"token operator\">=</span> queryFactory\n        <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 대상이 여러개</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Tuple</span><span class=\"token punctuation\">></span></span> result2 <span class=\"token operator\">=</span> queryFactory\n        <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span> member<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// --- DTO 사용</span>\n<span class=\"token comment\">// 1. Property 사용</span>\n<span class=\"token comment\">// bean으로 사용하면 getter, setter로 값을 넣어준다.</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MemberDto</span><span class=\"token punctuation\">></span></span> result <span class=\"token operator\">=</span> queryFactory\n        <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Projections</span><span class=\"token punctuation\">.</span><span class=\"token function\">bean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MemberDto</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n                member<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span>\n                member<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 2. field 직접 접근</span>\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MemberDto</span><span class=\"token punctuation\">></span></span> result <span class=\"token operator\">=</span> queryFactory\n        <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Projections</span><span class=\"token punctuation\">.</span><span class=\"token function\">fields</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MemberDto</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n                member<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span>\n                member<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 2.1 field 접근 시 별칭이 다를 때</span>\n<span class=\"token class-name\">QMember</span> memberSub <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QMember</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"memberSub\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserDto</span><span class=\"token punctuation\">></span></span> result <span class=\"token operator\">=</span> queryFactory\n        <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Projections</span><span class=\"token punctuation\">.</span><span class=\"token function\">fields</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">UserDto</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n                member<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">.</span><span class=\"token function\">as</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n                <span class=\"token comment\">// 서브 쿼리 사용 시, 이름이 없을 때 ExpressionUtils 사용</span>\n                <span class=\"token class-name\">ExpressionUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">as</span><span class=\"token punctuation\">(</span>\n                        <span class=\"token function\">select</span><span class=\"token punctuation\">(</span>memberSub<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                                <span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>memberSub<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 3. 생성자 사용</span>\n <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MemberDto</span><span class=\"token punctuation\">></span></span> result <span class=\"token operator\">=</span> queryFactory\n        <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Projections</span><span class=\"token punctuation\">.</span><span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MemberDto</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n        member<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span>\n        member<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>추가로 Dto 클래스에 <strong>@QueryProjection</strong> 어노테이션을 추가해 Dto 전용 Q-type을 추가해<br>\n깔끔한 코드를 작성 가능한데 Dto 클래스 내부에 Querydsl 라이브러리 의존성이 생기기 때문에<br>\n확장성이나 유지보수 시 단점이 될 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token annotation punctuation\">@NoArgsConstructor</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserDto</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@QueryProjection</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">UserDto</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserDto</span><span class=\"token punctuation\">></span></span> result <span class=\"token operator\">=</span> queryFactory\n        <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">QUserDto</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span> member<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Tip!!</p>\n<ul>\n<li>Query로 데이터 가져올 때 기본조건이나 limit 조건 있는게 좋음 (너무 많은 데이터 가져와서)</li>\n</ul>\n<h2 id=\"동적-쿼리\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EC%A0%81-%EC%BF%BC%EB%A6%AC\" aria-label=\"동적 쿼리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동적 쿼리</h2>\n<p>동적 쿼리를 처리할 땐 <strong>BooleanBuilder</strong>, <strong>Where 다중 파라미터</strong> 2가지 방법으로 처리가 가능하다.</p>\n<ol>\n<li>BooleanBuilder 사용</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Member</span><span class=\"token punctuation\">></span></span> result <span class=\"token operator\">=</span> <span class=\"token function\">searchMember1</span><span class=\"token punctuation\">(</span>usernameParam<span class=\"token punctuation\">,</span> ageParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Member</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">searchMember1</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> usernameCond<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span> ageCond<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">BooleanBuilder</span> builder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BooleanBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>usernameCond <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        builder<span class=\"token punctuation\">.</span><span class=\"token function\">and</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span>usernameCond<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ageCond <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        builder<span class=\"token punctuation\">.</span><span class=\"token function\">and</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span>ageCond<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> queryFactory\n            <span class=\"token punctuation\">.</span><span class=\"token function\">selectFrom</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span>builder<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"2\">\n<li>Where 다중 파라미터 사용</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Member</span><span class=\"token punctuation\">></span></span> result <span class=\"token operator\">=</span> <span class=\"token function\">searchMember2</span><span class=\"token punctuation\">(</span>usernameParam<span class=\"token punctuation\">,</span> ageParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Member</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">searchMember2</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> usernameCond<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span> ageCond<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> queryFactory\n            <span class=\"token punctuation\">.</span><span class=\"token function\">selectFrom</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token function\">usernameEq</span><span class=\"token punctuation\">(</span>usernameCond<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ageEq</span><span class=\"token punctuation\">(</span>ageCond<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">BooleanExpression</span> <span class=\"token function\">usernameEq</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> usernameCond<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> usernameCond <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> member<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span>usernameCond<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">BooleanExpression</span> <span class=\"token function\">ageEq</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> ageCond<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> ageCond <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> member<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span>ageCond<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"sql-함수-사용\" style=\"position:relative;\"><a href=\"#sql-%ED%95%A8%EC%88%98-%EC%82%AC%EC%9A%A9\" aria-label=\"sql 함수 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SQL 함수 사용</h2>\n<ul>\n<li>concat, coalesce, upper 와 같은 간단한 함수들은 Querydsl 에서 메소드로 지원</li>\n<li>자신이 사용하고 싶은 함수가 Querydsl 에 없는 경우는 stringTemplate()을 이용하여 쿼리를 작성 가능</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">ist<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> result <span class=\"token operator\">=</span> queryFactory\n\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Expressions</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringTemplate</span><span class=\"token punctuation\">(</span>\n\t\t\t\t<span class=\"token string\">\"function('regexp_replace', {0}, {1}, {2})\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\tuser<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span> <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"User_\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"수정-삭제-벌크-연산\" style=\"position:relative;\"><a href=\"#%EC%88%98%EC%A0%95-%EC%82%AD%EC%A0%9C-%EB%B2%8C%ED%81%AC-%EC%97%B0%EC%82%B0\" aria-label=\"수정 삭제 벌크 연산 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>수정, 삭제 벌크 연산</h2>\n<ul>\n<li>영속성 컨텍스트에 있는 엔티티를 무시하고 실행되기 때문에 배치 쿼리를 실행하고 나면 영속성 컨텍스트를 초기화 필요</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">long</span> count <span class=\"token operator\">=</span> queryFactory\n              <span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">)</span>\n              <span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span> <span class=\"token string\">\"비회원\"</span><span class=\"token punctuation\">)</span>\n              <span class=\"token punctuation\">.</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">,</span><span class=\"token function\">lt</span><span class=\"token punctuation\">(</span><span class=\"token number\">28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n              <span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nem<span class=\"token punctuation\">.</span><span class=\"token function\">flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nem<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"datajpa와-함께-사용\" style=\"position:relative;\"><a href=\"#datajpa%EC%99%80-%ED%95%A8%EA%BB%98-%EC%82%AC%EC%9A%A9\" aria-label=\"datajpa와 함께 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DataJPA와 함께 사용</h2>\n<p>DataJPA 같은 경우 <a href=\"http://localhost:8000/JPA_4/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">실전 스프링 데이터 JPA</a> 에 정리해놔서</p>\n<p>코드로만 정리한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// repository</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">MemberRepository</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">JpaRepository</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Member</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">MemberRepositoryCustom</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Member</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findByUsername</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Custom</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">MemberRepositoryCustom</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MemberTeamDto</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">search</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MemberSearchCondition</span> condition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MemberTeamDto</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">searchPageSimple</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MemberSearchCondition</span> condition<span class=\"token punctuation\">,</span>\n                                         <span class=\"token class-name\">Pageable</span> pageable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MemberTeamDto</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">searchPageComplex</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MemberSearchCondition</span> condition<span class=\"token punctuation\">,</span>\n                                          <span class=\"token class-name\">Pageable</span> pageable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Impl</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MemberRepositoryImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">MemberRepositoryCustom</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">JPAQueryFactory</span> queryFactory<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MemberRepositoryImpl</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EntityManager</span> em<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>queryFactory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JPAQueryFactory</span><span class=\"token punctuation\">(</span>em<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">//회원명, 팀명, 나이(ageGoe, ageLoe)</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MemberTeamDto</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">search</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MemberSearchCondition</span> condition<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> queryFactory\n                <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">QMemberTeamDto</span><span class=\"token punctuation\">(</span>\n                        member<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n                        member<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span>\n                        member<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">,</span>\n                        team<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n                        team<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">leftJoin</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>team<span class=\"token punctuation\">,</span> team<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token function\">usernameEq</span><span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">.</span><span class=\"token function\">getUsername</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">teamNameEq</span><span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">.</span><span class=\"token function\">getTeamName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">ageGoe</span><span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">.</span><span class=\"token function\">getAgeGoe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">ageLoe</span><span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">.</span><span class=\"token function\">getAgeLoe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BooleanExpression</span> <span class=\"token function\">usernameEq</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> username<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> member<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BooleanExpression</span> <span class=\"token function\">teamNameEq</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> teamName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>teamName<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> team<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span>teamName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BooleanExpression</span> <span class=\"token function\">ageGoe</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> ageGoe<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> ageGoe <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> member<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">.</span><span class=\"token function\">goe</span><span class=\"token punctuation\">(</span>ageGoe<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BooleanExpression</span> <span class=\"token function\">ageLoe</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> ageLoe<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> ageLoe <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> member<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">.</span><span class=\"token function\">loe</span><span class=\"token punctuation\">(</span>ageLoe<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MemberTeamDto</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">searchPageSimple</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MemberSearchCondition</span> condition<span class=\"token punctuation\">,</span>\n                                                <span class=\"token class-name\">Pageable</span> pageable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">QueryResults</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MemberTeamDto</span><span class=\"token punctuation\">></span></span> results <span class=\"token operator\">=</span> queryFactory\n                <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">QMemberTeamDto</span><span class=\"token punctuation\">(</span>\n                        member<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n                        member<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span>\n                        member<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">,</span>\n                        team<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n                        team<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">leftJoin</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>team<span class=\"token punctuation\">,</span> team<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token function\">usernameEq</span><span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">.</span><span class=\"token function\">getUsername</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">teamNameEq</span><span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">.</span><span class=\"token function\">getTeamName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">ageGoe</span><span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">.</span><span class=\"token function\">getAgeGoe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">ageLoe</span><span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">.</span><span class=\"token function\">getAgeLoe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">offset</span><span class=\"token punctuation\">(</span>pageable<span class=\"token punctuation\">.</span><span class=\"token function\">getOffset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span>pageable<span class=\"token punctuation\">.</span><span class=\"token function\">getPageSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">fetchResults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MemberTeamDto</span><span class=\"token punctuation\">></span></span> content <span class=\"token operator\">=</span> results<span class=\"token punctuation\">.</span><span class=\"token function\">getResults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">long</span> total <span class=\"token operator\">=</span> results<span class=\"token punctuation\">.</span><span class=\"token function\">getTotal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PageImpl</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">,</span> pageable<span class=\"token punctuation\">,</span> total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/*\n     * 데이터 조회 쿼리와, 전체 카운트 쿼리를 분리\n     */</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MemberTeamDto</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">searchPageComplex</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MemberSearchCondition</span> condition<span class=\"token punctuation\">,</span>\n                                                 <span class=\"token class-name\">Pageable</span> pageable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MemberTeamDto</span><span class=\"token punctuation\">></span></span> content <span class=\"token operator\">=</span> queryFactory\n                <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">QMemberTeamDto</span><span class=\"token punctuation\">(</span>\n                        member<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n                        member<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span>\n                        member<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">,</span>\n                        team<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n                        team<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">leftJoin</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>team<span class=\"token punctuation\">,</span> team<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token function\">usernameEq</span><span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">.</span><span class=\"token function\">getUsername</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">teamNameEq</span><span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">.</span><span class=\"token function\">getTeamName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">ageGoe</span><span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">.</span><span class=\"token function\">getAgeGoe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">ageLoe</span><span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">.</span><span class=\"token function\">getAgeLoe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">offset</span><span class=\"token punctuation\">(</span>pageable<span class=\"token punctuation\">.</span><span class=\"token function\">getOffset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span>pageable<span class=\"token punctuation\">.</span><span class=\"token function\">getPageSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//        long total = queryFactory</span>\n<span class=\"token comment\">//                .select(member)</span>\n<span class=\"token comment\">//                .from(member)</span>\n<span class=\"token comment\">//                .leftJoin(member.team, team)</span>\n<span class=\"token comment\">//                .where(usernameEq(condition.getUsername()),</span>\n<span class=\"token comment\">//                        teamNameEq(condition.getTeamName()),</span>\n<span class=\"token comment\">//                        ageGoe(condition.getAgeGoe()),</span>\n<span class=\"token comment\">//                        ageLoe(condition.getAgeLoe()))</span>\n<span class=\"token comment\">//                .fetchCount();</span>\n\n<span class=\"token comment\">//        return new PageImpl&lt;>(content, pageable, total);</span>\n\n        <span class=\"token class-name\">JPAQuery</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Member</span><span class=\"token punctuation\">></span></span> countQuery <span class=\"token operator\">=</span> queryFactory\n                <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">leftJoin</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>team<span class=\"token punctuation\">,</span> team<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token function\">usernameEq</span><span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">.</span><span class=\"token function\">getUsername</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">teamNameEq</span><span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">.</span><span class=\"token function\">getTeamName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">ageGoe</span><span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">.</span><span class=\"token function\">getAgeGoe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token function\">ageLoe</span><span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">.</span><span class=\"token function\">getAgeLoe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">PageableExecutionUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPage</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">,</span> pageable<span class=\"token punctuation\">,</span>\n                countQuery<span class=\"token operator\">::</span><span class=\"token function\">fetchCount</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h1>\n<ul>\n<li><a href=\"https://www.inflearn.com/course/Querydsl-%EC%8B%A4%EC%A0%84/dashboard\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">실전! Querydsl</a></li>\n</ul>","excerpt":"QueryDSL 이란? Querydsl을 통해 생성되는 정적 Q-type 클래스를 이용해 쿼리를 생성하도록 도와주는 프레임 워크 JPQL vs Querydsl 타입 체크, 오류 잡아주는 시점 JPQL - 실행 시점 오류 Querydsl - 컴파일 시…","tableOfContents":"<ul>\n<li>\n<p><a href=\"/JPA_5/#querydsl-%EC%9D%B4%EB%9E%80\">QueryDSL 이란?</a></p>\n<ul>\n<li><a href=\"/JPA_5/#jpql-vs-querydsl\">JPQL vs Querydsl</a></li>\n<li><a href=\"/JPA_5/#buildgradle\">build.gradle</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/JPA_5/#querydsl-%ED%99%9C%EC%9A%A9\">QueryDSL 활용</a></p>\n<ul>\n<li><a href=\"/JPA_5/#querydsl-bean-%EB%93%B1%EB%A1%9D\">QueryDSL Bean 등록</a></li>\n<li><a href=\"/JPA_5/#%EB%8F%99%EC%8B%9C%EC%84%B1-%EB%AC%B8%EC%A0%9C\">동시성 문제</a></li>\n<li><a href=\"/JPA_5/#qclass-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%82%AC%EC%9A%A9-%EB%B0%A9%EB%B2%95\">Qclass 인스턴스 사용 방법</a></li>\n<li><a href=\"/JPA_5/#%EA%B2%80%EC%83%89-%EC%A1%B0%EA%B1%B4-%EC%B6%94%EA%B0%80\">검색 조건 추가</a></li>\n<li><a href=\"/JPA_5/#%EA%B2%B0%EA%B3%BC-%EC%A1%B0%ED%9A%8C\">결과 조회</a></li>\n<li><a href=\"/JPA_5/#%EC%A0%95%EB%A0%AC\">정렬</a></li>\n<li><a href=\"/JPA_5/#%EC%A7%91%ED%95%A9\">집합</a></li>\n<li><a href=\"/JPA_5/#%EC%A1%B0%EC%9D%B8\">조인</a></li>\n<li><a href=\"/JPA_5/#%EC%84%9C%EB%B8%8C-%EC%BF%BC%EB%A6%AC\">서브 쿼리</a></li>\n<li><a href=\"/JPA_5/#%ED%94%84%EB%A1%9C%EC%A0%9D%EC%85%98\">프로젝션</a></li>\n<li><a href=\"/JPA_5/#%EB%8F%99%EC%A0%81-%EC%BF%BC%EB%A6%AC\">동적 쿼리</a></li>\n<li><a href=\"/JPA_5/#sql-%ED%95%A8%EC%88%98-%EC%82%AC%EC%9A%A9\">SQL 함수 사용</a></li>\n<li><a href=\"/JPA_5/#%EC%88%98%EC%A0%95-%EC%82%AD%EC%A0%9C-%EB%B2%8C%ED%81%AC-%EC%97%B0%EC%82%B0\">수정, 삭제 벌크 연산</a></li>\n<li><a href=\"/JPA_5/#datajpa%EC%99%80-%ED%95%A8%EA%BB%98-%EC%82%AC%EC%9A%A9\">DataJPA와 함께 사용</a></li>\n</ul>\n</li>\n<li><a href=\"/JPA_5/#reference\">Reference</a></li>\n</ul>","fields":{"slug":"/JPA_5/"},"frontmatter":{"title":"Querydsl","date":"Oct 17, 2022","tags":["JPA"],"keywords":["JPA"],"update":"Feb 22, 2023"}}},"pageContext":{"slug":"/JPA_5/","series":[{"slug":"/JPA_1/","title":"자바 ORM 표준 JPA 프로그래밍 (기본편)","num":1},{"slug":"/JPA_2/","title":"실전! 스프링 부트와 JPA 활용1 - 웹 애플리케이션 개발","num":2},{"slug":"/JPA_3/","title":"실전! 스프링 부트와 JPA 활용2 - API 개발과 성능 최적화","num":3},{"slug":"/JPA_4/","title":"실전 스프링 데이터 JPA","num":4},{"slug":"/JPA_5/","title":"Querydsl","num":5}],"lastmod":"2023-02-22"}},"staticQueryHashes":["2027115977","694178885"]}